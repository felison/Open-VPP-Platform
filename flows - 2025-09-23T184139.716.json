[
    {
        "id": "46399b5e5303ee96",
        "type": "tab",
        "label": "CP-Home",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0c9bdc5765c6cd51",
        "type": "tab",
        "label": "D1 C1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "022d1ae1daec714a",
        "type": "tab",
        "label": "D1-Curtailment",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a43a330495ae6b2",
        "type": "tab",
        "label": "D1  C2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f1",
        "type": "tab",
        "label": "D1  C3",
        "disabled": true,
        "info": "Demo flow simulating load shifting for energy-consuming assets between 17:00 and 20:00."
    },
    {
        "id": "a7de3d2590a25b91",
        "type": "tab",
        "label": "D2 C1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5b4e85dc2a347e67",
        "type": "tab",
        "label": "D2 Curtailment",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "909ecd68cb0a370f",
        "type": "tab",
        "label": "Agregaat C1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4394cc19da3ce8b8",
        "type": "tab",
        "label": "Agregaat C4 Curt",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12137255fb5266dc",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "25bf4913766200e4",
            "3f07f858883076e9",
            "e28f871f5c559c86",
            "6d25798e71568b55",
            "98f9041d18024fee",
            "d0782b1c962fc287",
            "bf98202e4cf70ea2",
            "911fe58112393b56",
            "cd7d75c30c1e5105"
        ],
        "x": 34,
        "y": 19,
        "w": 912,
        "h": 222
    },
    {
        "id": "478b17bed9973388",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [],
        "x": 1168,
        "y": 173,
        "w": 40,
        "h": 40
    },
    {
        "id": "2833efd508051044",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "78d6305639cf69b1",
            "8bd90b9e524c97c4",
            "352821c59214c97a",
            "785d4f345f8805c7",
            "47bd6cbaa3fbf4f5",
            "2da8fcaeabc6f739",
            "5b5e1853dddd3e90",
            "6cf8981486880679",
            "61e2bc4baec11ada",
            "7f35463d2ae7104f",
            "9f46b267f8f9abc9",
            "9e2f0a7f183d77bc",
            "810fdf59ea8bfc90",
            "dade29a643552a77",
            "cf41b07d7308831f",
            "d79c487a5ca7e00f",
            "6ba45dde323fe64e",
            "86452fef96ea7530",
            "01bf44039457ccfc",
            "5f70cf77b2eb20e0"
        ],
        "x": 54,
        "y": 939,
        "w": 1092,
        "h": 362
    },
    {
        "id": "7d0803a850d2269a",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "ac08adc524a49168",
            "3473e525d9e738bc",
            "bbbf9f12b3d2ac9a",
            "f3ade05de44da303",
            "c6694b8902fb87e1",
            "3b276ac6e3d5816c",
            "27a59de08d4c1d19",
            "3ba3e8bcb5b90838",
            "366fd95fdb4f9b6d",
            "02192639c0b06f80",
            "8bc928ebd82d5cb8",
            "95b90696b8d657b5",
            "1c674855ebc2e064",
            "e209e0c88232eb4b",
            "e106f555789a9aee",
            "9de8d16a91da609f",
            "0adcad774ba1b390",
            "aed881f7fa2381c1"
        ],
        "x": 14,
        "y": 1479,
        "w": 1112,
        "h": 382
    },
    {
        "id": "410d75efd9b67907",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "f7709dab8fb6e386",
            "c0ed3e10e0b58475",
            "4a987a0e40c4b03d",
            "3b9e860a0789151a",
            "d42316d8430f48d1",
            "cb373c36bc9677be",
            "221d33f80f5cd8e1",
            "57041e5396464aa6",
            "f93ff6ce3f430871"
        ],
        "x": 34,
        "y": 19,
        "w": 912,
        "h": 222
    },
    {
        "id": "8ececd261d2329f9",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "bca253d780682465",
            "4bc7b0bd798f94cc",
            "f8a4d181d8831028",
            "61417258dfa2cc55",
            "1c9dd1c2415946e9",
            "ada311ab98140756",
            "98b0997593d37433",
            "09bb12824ce1366d",
            "fcb109adfae50c24"
        ],
        "x": 34,
        "y": 259,
        "w": 1152,
        "h": 182
    },
    {
        "id": "6ce510c71b38ba43",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "785b1ba98728c98a",
            "23942f3909ac0ec7",
            "f6205ff273869cae",
            "7ab085b16fe32b99",
            "cd29e0b8b711df37",
            "0a2eae584da90771",
            "497ab16704df5f49",
            "760ea8f9c7ac9ca9",
            "8d9c8dad0fc5ef2c"
        ],
        "x": 34,
        "y": 459,
        "w": 812,
        "h": 202
    },
    {
        "id": "90f832a7e9ee3928",
        "type": "group",
        "z": "9a43a330495ae6b2",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "4ab0c212c80bfea2",
            "06ee7544585b2597",
            "be0d2550aaf67e40",
            "26c3f1d4e16c2cb3",
            "298cf74711a56461",
            "9c1d9c567c6cc7f1",
            "3340b74acc54e1a8"
        ],
        "x": 34,
        "y": 699,
        "w": 612,
        "h": 182
    },
    {
        "id": "66c54fadcda953a6",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "3be17e39ca3508fd",
            "d8fe560c233f8d4e",
            "b2f5b986165a3707",
            "5a1476bac03488bf",
            "3ab7c432532ccb05",
            "73a4e1f72ee75a64",
            "ff7a4d8495761208",
            "b29b9ca6561893db",
            "4395f6a5678feaf5",
            "81bf70fb4437b02f",
            "cee37f70eb95fafa",
            "52838920690a6e7a",
            "eeaa1c89cbda9a0e",
            "44fc97d90aa33ba3",
            "8505269c949d5fe8",
            "bec81c554b463272",
            "72d80bd348c2620f",
            "b94379509bd76ae9"
        ],
        "x": 14,
        "y": 699,
        "w": 1052,
        "h": 322
    },
    {
        "id": "d32383e8728f01ce",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "013baa4d98d31d7e",
            "cde3134874283102",
            "b280d2f6a9869aec",
            "ceabf3153e36a99d",
            "f77fcc5570b17dc3",
            "caef10120fe25a17",
            "f7a2bbe96c947e05",
            "cddbd8368a697552",
            "465d1ca9080acf2f",
            "27e1dce616c342fb",
            "469fda87d1779e57",
            "b1cbbe88482aefa3",
            "d8cacabeb11987ae",
            "0519336361cf4b34",
            "6d6e23944f66f373",
            "129824c044db61e5",
            "9df43fea25f0204e",
            "0e1b66a6314ff9e7",
            "586f1b42dc96c9df",
            "2eaaf19a96248f95"
        ],
        "x": 34,
        "y": 1059,
        "w": 1172,
        "h": 522
    },
    {
        "id": "2e34aff27c33e83f",
        "type": "group",
        "z": "a7de3d2590a25b91",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "66eedb35718b7229",
            "5344d0fbfc7fa9dd",
            "d506d1f16a1ebbdc",
            "5f3dfc2f7598a3eb",
            "a1812894085d934b",
            "998b8e6e541f0f45",
            "e88c631367d39b3b"
        ],
        "x": 54,
        "y": 19,
        "w": 932,
        "h": 142
    },
    {
        "id": "9b365b47a4e25843",
        "type": "group",
        "z": "a7de3d2590a25b91",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "417cf7b075023445",
            "8eac10cd78a8741b",
            "a2a8010f25d612c8",
            "45ad0f201b5c8060",
            "b1b1c5e685b68cd8",
            "00399cbad423a663",
            "2cf71c214416db76",
            "b1d855dc4a85e62b",
            "1c84a6c4bb7612c7",
            "e2e6ab94aec41ac2",
            "e0c71da1b325ae09",
            "5b7f13fbae0af2a2",
            "7b7674c29974b3d0",
            "19cf82d0962e9d59"
        ],
        "x": 54,
        "y": 179,
        "w": 1032,
        "h": 302
    },
    {
        "id": "00c6a3c12ddd7db5",
        "type": "group",
        "z": "a7de3d2590a25b91",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "5533ef5078332c0a",
            "098484508901e226",
            "4d5c5a8e44c2b127",
            "52f19f450ec5c693",
            "9cd69821d00e23b4",
            "4999cb0b1b46569c",
            "9b7c18fed7225491",
            "1552ba8374a502c0",
            "b27da7430b6cba9d",
            "eb49128cfb449a6e",
            "507bde26a254ee58",
            "21ac50fa2c9f5c3d",
            "3474b89d5259f1bb",
            "eb11bec4a55808d6"
        ],
        "x": 54,
        "y": 519,
        "w": 932,
        "h": 302
    },
    {
        "id": "a4883419bb76fe3b",
        "type": "group",
        "z": "022d1ae1daec714a",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "798bc48377bec11a",
            "741de7b25baffb6d",
            "30a323e98cac30cd",
            "e93f2e63812e8082",
            "f91c9b19551b875a",
            "1957f2ef1fbcd432",
            "ac71f98f64ba2558",
            "dd156ea41e0fb4b7",
            "e41d8de910a46212",
            "d3d2bb74c937e48d"
        ],
        "x": 14,
        "y": 539,
        "w": 1172,
        "h": 202
    },
    {
        "id": "ed0bdd641867c624",
        "type": "group",
        "z": "022d1ae1daec714a",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "f9ec509595f66cce",
            "0d9975b970a4578f",
            "e7db6e55ee29e7f7",
            "6b7f943d31962387",
            "5dbe6b029389ac6e"
        ],
        "x": 14,
        "y": 799,
        "w": 1132,
        "h": 122
    },
    {
        "id": "ff49c9cb0c3079e4",
        "type": "group",
        "z": "022d1ae1daec714a",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "38eb8cf0dfb0325d",
            "d6b855bed9054110",
            "e96d4efb2c101c75",
            "fbd14b6b35a28718",
            "30f8ca3cf58987b2"
        ],
        "x": 14,
        "y": 979,
        "w": 792,
        "h": 162
    },
    {
        "id": "126c7d82125e56f4",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "8f81b2c8b25de49f",
            "ab3fd17cfe09516a",
            "f14dafb0e3265efd"
        ],
        "x": 34,
        "y": 259,
        "w": 712,
        "h": 142
    },
    {
        "id": "10ff15e8b5170a7c",
        "type": "group",
        "z": "0c9bdc5765c6cd51",
        "style": {
            "stroke": "#b2b3bd",
            "stroke-opacity": "1",
            "fill": "#f2f3fb",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#32333b"
        },
        "nodes": [
            "fbe685c3ee61f5f3",
            "04f13e5a4d9c1970",
            "d5bbfd123e371518"
        ],
        "x": 34,
        "y": 499,
        "w": 732,
        "h": 142
    },
    {
        "id": "59985407809865cb",
        "type": "ui-base",
        "name": "Demo VPP",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-control",
            "ui-notification"
        ],
        "showPathInSidebar": false,
        "headerContent": "dashpage",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 5,
        "showDisconnectNotification": true,
        "allowInstall": false
    },
    {
        "id": "568e2ec80d34cc6c",
        "type": "ui-theme",
        "name": "Theme VPP",
        "colors": {
            "surface": "#1119e8",
            "primary": "#4b4448",
            "bgPage": "#d94136",
            "groupBg": "#debc12",
            "groupOutline": "#cdbe18"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "73fa1035d80d0529",
        "type": "ui-page",
        "name": "Deelnr 1 Contract 1 ENERGIE",
        "ui": "59985407809865cb",
        "path": "/page-d1c1",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "1f06311e1e0fcade",
        "type": "ui-group",
        "name": "1.1.1 Contract Inkoop Verkoop Energie",
        "page": "73fa1035d80d0529",
        "width": "8",
        "height": "2",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "927c4db6d96a4652",
        "type": "ui-page",
        "name": "Deelnemer 1 Contract 2",
        "ui": "59985407809865cb",
        "path": "/page-d1c2",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": false,
        "disabled": "false"
    },
    {
        "id": "276d05959a831d0c",
        "type": "ui-page",
        "name": "Cooperatie - Home",
        "ui": "59985407809865cb",
        "path": "/page-coop-contracten",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8c157c23530bdc76",
        "type": "ui-group",
        "name": "Home",
        "page": "276d05959a831d0c",
        "width": "8",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b228ba8cc54b6f28",
        "type": "ui-group",
        "name": "ONDERHOUD Stap 1 - Contract Voorwaarden Loadshifting Boiler",
        "page": "927c4db6d96a4652",
        "width": "8",
        "height": "2",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "74c3326dbc89c4b3",
        "type": "ui-group",
        "name": "Stap 5 - Settlement",
        "page": "927c4db6d96a4652",
        "width": "8",
        "height": "2",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3421c60cfa4a9de2",
        "type": "ui-group",
        "name": "1.1.5  Afrekenen - Fulfillment",
        "page": "73fa1035d80d0529",
        "width": "8",
        "height": "2",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "66758debebab24aa",
        "type": "ui-group",
        "name": "1.1.4  Meten - Measurement",
        "page": "73fa1035d80d0529",
        "width": "8",
        "height": "2",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "301734756c402daf",
        "type": "ui-group",
        "name": "Stap 3 - Uitvoering",
        "page": "927c4db6d96a4652",
        "width": "8",
        "height": "2",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b0c4d1e7b27ff150",
        "type": "ui-group",
        "name": "Stap 4 - Meten",
        "page": "927c4db6d96a4652",
        "width": "8",
        "height": "2",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "d268d9f700eaaacc",
        "type": "ui-page",
        "name": "Deelnemer 1 Contract 3",
        "ui": "59985407809865cb",
        "path": "/page-d1c3",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": false,
        "disabled": "false"
    },
    {
        "id": "4923fe7292e245ec",
        "type": "ui-group",
        "name": "ONDERHOUD Load shifting met assets",
        "page": "d268d9f700eaaacc",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "8e5411a3c9124524",
        "type": "ui-page",
        "name": "Deelnr 2 Contr 1 ENERGIE",
        "ui": "59985407809865cb",
        "path": "/page6",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9f894ccd6955bf05",
        "type": "ui-group",
        "name": "Stap 3 - Factuur",
        "page": "8e5411a3c9124524",
        "width": "8",
        "height": "2",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3ff0523cefbe8bb6",
        "type": "ui-group",
        "name": "Stap 2 - Meten",
        "page": "8e5411a3c9124524",
        "width": "8",
        "height": "2",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "f6ef2709e1551c1b",
        "type": "ui-group",
        "name": "Stap 1 - Contract definitie",
        "page": "8e5411a3c9124524",
        "width": "8",
        "height": "2",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "74e0977c546da2fd",
        "type": "mqtt-broker",
        "name": "CloudAMQP",
        "broker": "kebnekaise.lmq.cloudamqp.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "19265123db406694",
        "type": "ui-page",
        "name": "Aggregaat Contr 1 ENERGIE",
        "ui": "59985407809865cb",
        "path": "/page-aggregaat",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 8,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3b53b4b0b1169109",
        "type": "ui-group",
        "name": "Resultaat Deelnemer 1 Contract 1",
        "page": "19265123db406694",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "fcdcf18a4a74ad50",
        "type": "ui-group",
        "name": "Resultaat Deelnemer 2 Contract 1",
        "page": "19265123db406694",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b89ae50a82362da4",
        "type": "ui-group",
        "name": "Aggregaat Deelnemer 1 en Deelnemer 2",
        "page": "19265123db406694",
        "width": 6,
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "aabbdac5b9e3e970",
        "type": "ui-page",
        "name": "Deelnr 1 Contr 4 CURTAILMENT",
        "ui": "59985407809865cb",
        "path": "/d1c4",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c630745d48bd46c2",
        "type": "ui-group",
        "name": "Stap 1 Trigger simulatie",
        "page": "aabbdac5b9e3e970",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "64328a3e42261266",
        "type": "ui-group",
        "name": "Stap 2 - Enkele record (block)",
        "page": "aabbdac5b9e3e970",
        "width": "8",
        "height": "2",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "cd1d7d4bbbdb652e",
        "type": "ui-group",
        "name": "Stap 3 - controle en toevoegen aan chain",
        "page": "aabbdac5b9e3e970",
        "width": "8",
        "height": "2",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ddf4d837417e9b06",
        "type": "ui-group",
        "name": "Stap 4 - Settlement en Factuur",
        "page": "aabbdac5b9e3e970",
        "width": "8",
        "height": "2",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6cfd4e6f6de7eae6",
        "type": "ui-group",
        "name": "Stap 0 - Curtailment Contract",
        "page": "aabbdac5b9e3e970",
        "width": "8",
        "height": "2",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0ba03d264725209f",
        "type": "ui-page",
        "name": "Deelnr 2  Contr 4  CURTAILMENT",
        "ui": "59985407809865cb",
        "path": "/d2curtail",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3be6a00ca0a134a4",
        "type": "ui-group",
        "name": "Deelnemer 2 curt stap 1",
        "page": "0ba03d264725209f",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2f529a11c2e9bc85",
        "type": "ui-page",
        "name": "Aggregaat Contr 4  CURTAILMENT",
        "ui": "59985407809865cb",
        "path": "/pagecoopaggrc4",
        "icon": "none",
        "layout": "grid",
        "theme": "568e2ec80d34cc6c",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 9,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0608458daecfcdc0",
        "type": "ui-group",
        "name": "Aggregaat c4 curt",
        "page": "2f529a11c2e9bc85",
        "width": 6,
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "053470e410d940ea",
        "type": "ui-group",
        "name": "Curtailment Resultaat Deelnemer 1",
        "page": "2f529a11c2e9bc85",
        "width": 6,
        "height": "2",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "352d02ac50ec210a",
        "type": "ui-group",
        "name": "Curtailment Resultaat Deelnemer 2",
        "page": "2f529a11c2e9bc85",
        "width": 6,
        "height": "2",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "17ae8cdbdbe87d17",
        "type": "ui-group",
        "name": "Peer2peer per deelnemer intern te verrekenen",
        "page": "19265123db406694",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "8d5eb0478d74ef8f",
        "type": "ui-link",
        "name": "Link 1",
        "ui": "59985407809865cb",
        "path": "/",
        "icon": "home",
        "order": 10,
        "visible": true,
        "disabled": false
    },
    {
        "id": "3401f62a03983bac",
        "type": "ui-group",
        "name": "1.1.2 Regelen - Controls",
        "page": "73fa1035d80d0529",
        "width": "8",
        "height": "2",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bd4fb62c760707d5",
        "type": "ui-group",
        "name": "1.1.3 Uitvoeren - Execution",
        "page": "73fa1035d80d0529",
        "width": "8",
        "height": "2",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9f04cb82a37bec61",
        "type": "function",
        "z": "46399b5e5303ee96",
        "name": "function 4",
        "func": "// Create a Date object from the timestamp + 2 hours\nlet date = new Date(msg.payload + (2 * 60 * 60 * 1000));\n\n// Format as HH:MM:SS\nlet hours = date.getHours().toString().padStart(2, '0');\nlet minutes = date.getMinutes().toString().padStart(2, '0');\nlet seconds = date.getSeconds().toString().padStart(2, '0');\n\nmsg.payload = `${hours}:${minutes}:${seconds}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "feb77d929eacd08d",
                "ce78d3fed3c4d384"
            ]
        ]
    },
    {
        "id": "feb77d929eacd08d",
        "type": "debug",
        "z": "46399b5e5303ee96",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "909764f671527b3c",
        "type": "inject",
        "z": "46399b5e5303ee96",
        "name": "Timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "9f04cb82a37bec61"
            ]
        ]
    },
    {
        "id": "ce78d3fed3c4d384",
        "type": "ui-text",
        "z": "46399b5e5303ee96",
        "group": "8c157c23530bdc76",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "Klok: ",
        "label": "Klok: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#121111",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 530,
        "y": 60,
        "wires": []
    },
    {
        "id": "58e48f4f379860f8",
        "type": "ui-text",
        "z": "46399b5e5303ee96",
        "group": "8c157c23530bdc76",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "GPL 3 licentie",
        "label": "licentie:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "GNU General Public License versie 3 (GPLv3)",
        "valueType": "str",
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "6c43b430bc43ba46",
        "type": "inject",
        "z": "46399b5e5303ee96",
        "name": "GNU General Public License versie 3 (GPLv3)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "GNU General Public License versie 3 (GPLv3)",
        "payloadType": "str",
        "x": 260,
        "y": 220,
        "wires": [
            [
                "58e48f4f379860f8"
            ]
        ]
    },
    {
        "id": "f073ed71820cb729",
        "type": "ui-text",
        "z": "46399b5e5303ee96",
        "group": "8c157c23530bdc76",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "link",
        "label": "link naar Licentie:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": true,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "44d96b26ec997b3f",
        "type": "inject",
        "z": "46399b5e5303ee96",
        "name": "link gpl",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": " <a href=\"https://www.gnu.org/licenses/gpl-3.0.txt\" target=\"_blank\">GPLv3</a>",
        "payloadType": "str",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "f073ed71820cb729"
            ]
        ]
    },
    {
        "id": "bf372889cf9c73e3",
        "type": "ui-text",
        "z": "46399b5e5303ee96",
        "group": "8c157c23530bdc76",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "Mededeling",
        "label": "Mededeling",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "fe3a3b194c5d27b3",
        "type": "inject",
        "z": "46399b5e5303ee96",
        "name": "Mededeling",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Om CPU en MQTT te sparen worden berekeningen en berichten om de 10 minuten ververst",
        "payloadType": "str",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "bf372889cf9c73e3"
            ]
        ]
    },
    {
        "id": "25bf4913766200e4",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "set flow.contract01",
        "rules": [
            {
                "t": "set",
                "p": "contract01",
                "pt": "flow",
                "to": "{     \"consumptionPrice\": 0.30,     \"feedInPrice\": 0.25 }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3f07f858883076e9",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "25bf4913766200e4"
            ]
        ]
    },
    {
        "id": "e28f871f5c559c86",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "get flow.contract01",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "contract01",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "911fe58112393b56",
                "cd7d75c30c1e5105"
            ]
        ]
    },
    {
        "id": "6d25798e71568b55",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "e28f871f5c559c86"
            ]
        ]
    },
    {
        "id": "3be17e39ca3508fd",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 400,
        "y": 880,
        "wires": [
            [
                "5a1476bac03488bf",
                "b29b9ca6561893db"
            ]
        ]
    },
    {
        "id": "d8fe560c233f8d4e",
        "type": "ui-text",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "order": 3,
        "width": "8",
        "height": "2",
        "name": "Slimme meter: Afname kWh",
        "label": "Simulatie Slimme Meter: Afname kWh:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#050505",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 880,
        "y": 860,
        "wires": []
    },
    {
        "id": "b2f5b986165a3707",
        "type": "ui-text",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "order": 6,
        "width": "8",
        "height": "2",
        "name": "Slimme Meter: Teruglevering kWh",
        "label": "Simulatie Slimme Meter: Teruglevering kWh:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#0d0d0d",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 900,
        "y": 900,
        "wires": []
    },
    {
        "id": "5a1476bac03488bf",
        "type": "function",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "function 5",
        "func": "if (msg.reset === true) {\n    context.set('meterstand', 0);\n    msg.payload = 0;\n    return msg;\n}\n\n// Haal de vorige meterstand op uit context, of start op 0 kWh\nlet prevMeterstand = context.get('meterstand') || 0;\n\n// Genereer een random toename tussen 0.1 en 2 kWh\nlet toename = (Math.random() * (2 - 0.1) + 0.1);\n\n// Bereken de nieuwe meterstand\nlet nieuweMeterstand = prevMeterstand + toename;\n\n// Sla de nieuwe meterstand op in context\ncontext.set('meterstand', nieuweMeterstand);\n\n// Zet de payload naar de nieuwe meterstand, afgerond op 2 decimalen\nmsg.payload = Number(nieuweMeterstand.toFixed(2));\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 860,
        "wires": [
            [
                "d8fe560c233f8d4e",
                "cee37f70eb95fafa"
            ]
        ]
    },
    {
        "id": "3ab7c432532ccb05",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "reset = true",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 780,
        "wires": [
            [
                "5a1476bac03488bf"
            ]
        ]
    },
    {
        "id": "73a4e1f72ee75a64",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "10 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "3ab7c432532ccb05",
                "4395f6a5678feaf5"
            ]
        ]
    },
    {
        "id": "ff7a4d8495761208",
        "type": "ui-button",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "name": "reset afname",
        "label": "reset afname",
        "order": 5,
        "width": "8",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "3ab7c432532ccb05"
            ]
        ]
    },
    {
        "id": "b29b9ca6561893db",
        "type": "function",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "function 6",
        "func": "if (msg.reset === true) {\n    context.set('meterstand', 0);\n    msg.payload = 0;\n    return msg;\n}\n\n// Haal de vorige meterstand op uit context, of start op 0 kWh\nlet prevMeterstand = context.get('meterstand') || 0;\n\n// Genereer een random toename tussen 0.1 en 2 kWh\nlet toename = (Math.random() * (2 - 0.1) + 0.1);\n\n// Bereken de nieuwe meterstand\nlet nieuweMeterstand = prevMeterstand + toename;\n\n// Sla de nieuwe meterstand op in context\ncontext.set('meterstand', nieuweMeterstand);\n\n// Zet de payload naar de nieuwe meterstand, afgerond op 2 decimalen\nmsg.payload = Number(nieuweMeterstand.toFixed(2));\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 900,
        "wires": [
            [
                "b2f5b986165a3707",
                "52838920690a6e7a"
            ]
        ]
    },
    {
        "id": "4395f6a5678feaf5",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "reset = true",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 980,
        "wires": [
            [
                "b29b9ca6561893db"
            ]
        ]
    },
    {
        "id": "81bf70fb4437b02f",
        "type": "ui-button",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "name": "reset teruglevering",
        "label": "reset teruglevering",
        "order": 8,
        "width": "8",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "4395f6a5678feaf5"
            ]
        ]
    },
    {
        "id": "013baa4d98d31d7e",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 1160,
        "wires": [
            [
                "469fda87d1779e57"
            ]
        ]
    },
    {
        "id": "cde3134874283102",
        "type": "debug",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b280d2f6a9869aec",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "Create Invoice",
        "info": "",
        "x": 130,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ceabf3153e36a99d",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "2 sec",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 1320,
        "wires": [
            [
                "caef10120fe25a17"
            ]
        ]
    },
    {
        "id": "f77fcc5570b17dc3",
        "type": "function",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1320,
        "wires": [
            [
                "b1cbbe88482aefa3"
            ]
        ]
    },
    {
        "id": "caef10120fe25a17",
        "type": "function",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "make last invoice",
        "func": "// Haal contract uit flow context, of fallback naar default prijzen\nlet contract = flow.get(\"contract\") || {\n    consumptionPrice: 0.30,\n    feedInPrice: 0.25\n};\n\n// Haal bestaande factuur op of initialiseer\nlet invoice = flow.get(\"invoice\") || {\n    startConsumptionMeter: null,\n    startFeedInMeter: null,\n    lastConsumptionMeter: null,\n    lastFeedInMeter: null,\n    totalConsumption_kWh: 0,\n    totalFeedIn_kWh: 0,\n    totalCost_eur: 0,\n    totalRevenue_eur: 0,\n    netBalance_eur: 0,\n    measurements: []\n};\n\n// Lees absolute meterstanden uit flow variabelen\nlet currentConsumptionMeter = flow.get(\"consumption\");\nlet currentFeedInMeter = flow.get(\"feedin\");\n\nif (currentConsumptionMeter === undefined || currentFeedInMeter === undefined) {\n    node.warn(\"Flow variabelen 'consumption' en/of 'feedin' zijn niet gezet!\");\n    return null;\n}\n\n// Eerste keer: beginmeterstanden vastleggen\nif (invoice.startConsumptionMeter === null || invoice.startFeedInMeter === null) {\n    invoice.startConsumptionMeter = currentConsumptionMeter;\n    invoice.startFeedInMeter = currentFeedInMeter;\n    invoice.lastConsumptionMeter = currentConsumptionMeter;\n    invoice.lastFeedInMeter = currentFeedInMeter;\n\n    invoice.measurements.push({\n        timestamp: new Date().toISOString(),\n        consumption_kWh: 0,\n        feedIn_kWh: 0,\n        note: \"Eerste meterstand vastgelegd\"\n    });\n\n} else {\n    // Bereken delta t.o.v. vorige meting\n    let consumptionDelta = currentConsumptionMeter - invoice.lastConsumptionMeter;\n    let feedInDelta = currentFeedInMeter - invoice.lastFeedInMeter;\n\n    if (consumptionDelta < 0) consumptionDelta = 0;\n    if (feedInDelta < 0) feedInDelta = 0;\n\n    // **Totalen worden niet meer opgeteld, maar opnieuw berekend vanaf startwaarden**\n    invoice.totalConsumption_kWh = currentConsumptionMeter - invoice.startConsumptionMeter;\n    invoice.totalFeedIn_kWh = currentFeedInMeter - invoice.startFeedInMeter;\n\n    invoice.totalCost_eur = parseFloat((invoice.totalConsumption_kWh * contract.consumptionPrice).toFixed(2));\n    invoice.totalRevenue_eur = parseFloat((invoice.totalFeedIn_kWh * contract.feedInPrice).toFixed(2));\n    invoice.netBalance_eur = parseFloat((invoice.totalRevenue_eur - invoice.totalCost_eur).toFixed(2));\n\n    invoice.measurements.push({\n        timestamp: new Date().toISOString(),\n        consumption_kWh: consumptionDelta,\n        feedIn_kWh: feedInDelta\n    });\n\n    invoice.lastConsumptionMeter = currentConsumptionMeter;\n    invoice.lastFeedInMeter = currentFeedInMeter;\n}\n\n// Sla invoice terug in flow context\nflow.set(\"invoice\", invoice);\n\n// Output 1: volledige factuur met meetgegevens\nlet fullInvoice = {\n    payload: invoice\n};\n\n// Output 2: vereenvoudigde factuur zonder meetgegevens\nlet simpleInvoice = {\n    payload: {\n        lastConsumptionMeter: invoice.lastConsumptionMeter,\n        lastFeedInMeter: invoice.lastFeedInMeter,\n        totalConsumption_kWh: invoice.totalConsumption_kWh,\n        totalFeedIn_kWh: invoice.totalFeedIn_kWh,\n        totalCost_eur: invoice.totalCost_eur,\n        totalRevenue_eur: invoice.totalRevenue_eur,\n        netBalance_eur: invoice.netBalance_eur\n    }\n};\n\nreturn [fullInvoice, simpleInvoice];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1320,
        "wires": [
            [],
            [
                "f77fcc5570b17dc3",
                "f7a2bbe96c947e05",
                "0519336361cf4b34"
            ]
        ]
    },
    {
        "id": "cee37f70eb95fafa",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "set flow.consumption",
        "rules": [
            {
                "t": "set",
                "p": "consumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "52838920690a6e7a",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "set flow.feedin",
        "rules": [
            {
                "t": "set",
                "p": "feedin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "98f9041d18024fee",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "group": "1f06311e1e0fcade",
        "page": "",
        "ui": "",
        "name": "logo step 1 contract",
        "order": 1,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimg.myloview.com%2Fstickers%2Fcontract-icon-vector-contract-sign-symbol-700-205118479.jpg&f=1&nofb=1&ipt=fbd73a9ac034363865a3a2d86ebf65e7c6ee0489b160a4dc0abfe4581dffd092\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 510,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d0782b1c962fc287",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "Step 1 - Define and commit to contract",
        "info": "",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "eeaa1c89cbda9a0e",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "Step 4 - Measurement and valuation",
        "info": "",
        "x": 200,
        "y": 740,
        "wires": []
    },
    {
        "id": "f7a2bbe96c947e05",
        "type": "debug",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cddbd8368a697552",
        "type": "mqtt out",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "CloudAMQP",
        "topic": "vpp/d1c1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74e0977c546da2fd",
        "x": 570,
        "y": 1480,
        "wires": []
    },
    {
        "id": "465d1ca9080acf2f",
        "type": "mqtt in",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "CloudAMQP",
        "topic": "vpp/d1c1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 570,
        "y": 1540,
        "wires": [
            [
                "27e1dce616c342fb"
            ]
        ]
    },
    {
        "id": "27e1dce616c342fb",
        "type": "debug",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1540,
        "wires": []
    },
    {
        "id": "bf98202e4cf70ea2",
        "type": "ui-text",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "group": "1f06311e1e0fcade",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "Voorwaarden:  ",
        "label": "Voorwaarden:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "911fe58112393b56",
        "type": "json",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "bf98202e4cf70ea2"
            ]
        ]
    },
    {
        "id": "469fda87d1779e57",
        "type": "function",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "create first invoice",
        "func": "// Initialiseer een nieuwe factuur in de flow context\nlet invoice = {\n    startConsumptionMeter: null,   // wordt later ingevuld bij eerste meting\n    startFeedInMeter: null,\n    lastConsumptionMeter: null,\n    lastFeedInMeter: null,\n    totalConsumption_kWh: 0,\n    totalFeedIn_kWh: 0,\n    totalCost_eur: 0,\n    totalRevenue_eur: 0,\n    netBalance_eur: 0,\n    measurements: []\n};\n\n// Zet deze factuur in de flow context\nflow.set(\"invoice\", invoice);\n\nnode.warn(\"First invoice initialized.\");\n\nreturn null;  // geen output nodig\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "cde3134874283102"
            ]
        ]
    },
    {
        "id": "b1cbbe88482aefa3",
        "type": "ui-table",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "group": "3421c60cfa4a9de2",
        "name": "Factuur bijgewerkt per 2 seconden",
        "label": "Factuur bijgewerkt per 2 seconden",
        "order": 3,
        "width": "0",
        "height": "0",
        "maxrows": "7",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1040,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "d8cacabeb11987ae",
        "type": "ui-button",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "group": "3421c60cfa4a9de2",
        "name": "reset first invoice",
        "label": "reset factuur",
        "order": 4,
        "width": "6",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 1200,
        "wires": [
            [
                "469fda87d1779e57"
            ]
        ]
    },
    {
        "id": "cd7d75c30c1e5105",
        "type": "debug",
        "z": "0c9bdc5765c6cd51",
        "g": "12137255fb5266dc",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "0519336361cf4b34",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "set flow lastinvoice",
        "rules": [
            {
                "t": "set",
                "p": "lastinvoice",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "9df43fea25f0204e"
            ]
        ]
    },
    {
        "id": "6d6e23944f66f373",
        "type": "change",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "get flow lastinvoice",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lastinvoice",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1480,
        "wires": [
            [
                "cddbd8368a697552"
            ]
        ]
    },
    {
        "id": "129824c044db61e5",
        "type": "inject",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "10 min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 1480,
        "wires": [
            [
                "6d6e23944f66f373"
            ]
        ]
    },
    {
        "id": "9df43fea25f0204e",
        "type": "debug",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1360,
        "wires": []
    },
    {
        "id": "44fc97d90aa33ba3",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "name": "Simulation",
        "info": "",
        "x": 120,
        "y": 800,
        "wires": []
    },
    {
        "id": "0e1b66a6314ff9e7",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "name": "Step 5 - Fulfillment",
        "info": "",
        "x": 150,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8f81b2c8b25de49f",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "126c7d82125e56f4",
        "name": "Step 2 - Adjustment and control - in this contract taken for granted",
        "info": "",
        "x": 290,
        "y": 300,
        "wires": []
    },
    {
        "id": "fbe685c3ee61f5f3",
        "type": "comment",
        "z": "0c9bdc5765c6cd51",
        "g": "10ff15e8b5170a7c",
        "name": "Step 3 - Execution on assets - in this contract not applicable",
        "info": "",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "04f13e5a4d9c1970",
        "type": "ui-text",
        "z": "0c9bdc5765c6cd51",
        "g": "10ff15e8b5170a7c",
        "group": "bd4fb62c760707d5",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "1.1.3 Uitvoering",
        "label": "In dit contract geen uitvoering op assets",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "Stap 3 - Uitvoering",
        "valueType": "str",
        "x": 140,
        "y": 600,
        "wires": []
    },
    {
        "id": "ab3fd17cfe09516a",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "126c7d82125e56f4",
        "group": "3401f62a03983bac",
        "page": "",
        "ui": "",
        "name": "logo step 2 controls",
        "order": 2,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fstatic.vecteezy.com%2Fsystem%2Fresources%2Fpreviews%2F000%2F571%2F150%2Foriginal%2Fvector-control-panel-icon.jpg&f=1&nofb=1&ipt=9d171fdabf97af6febc5eb0794484ff5fa6fdb96db3841cdfe9fe478fd99b58d\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d5bbfd123e371518",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "10ff15e8b5170a7c",
        "group": "bd4fb62c760707d5",
        "page": "",
        "ui": "",
        "name": "logo step 3 execution",
        "order": 1,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.b2JcfTLbhBZI-pQIFR-F1AHaHa%3Fpid%3DApi&f=1&ipt=0868a17b3b74014fd269669700d3dd3e5227cc66fb471cb6d53f60b2871b75af&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8505269c949d5fe8",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "page": "",
        "ui": "",
        "name": "logo step 4 measuring",
        "order": 1,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.FgbY5_NWo8u1VYsxK-ZapwHaHa%3Fpid%3DApi&f=1&ipt=b16095d3a9687ba603f20dde18c9c97926c9f647fee446401c4bae9a589ba66d&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "586f1b42dc96c9df",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "group": "3421c60cfa4a9de2",
        "page": "",
        "ui": "",
        "name": "logo step 4 fulfillment",
        "order": 1,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.gI9h7TN-Eq82ytHCG88vJgHaHx%3Fpid%3DApi&f=1&ipt=1aec98387c8b248e7284b5e6edc3b3be13372b0bf08f9b8739b6da13ecf16c57&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "bec81c554b463272",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "page": "",
        "ui": "",
        "name": "foto slimme meter",
        "order": 2,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.kq_-_5HkGiQ70Euh6GCuTwHaFV%3Fr%3D0%26pid%3DApi&f=1&ipt=a036b397495ab804cbc41d07cd445ca2a79f3a55a0dafac9f012728ab4d5e05a&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"width:40%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "2eaaf19a96248f95",
        "type": "ui-template",
        "z": "0c9bdc5765c6cd51",
        "g": "d32383e8728f01ce",
        "group": "3421c60cfa4a9de2",
        "page": "",
        "ui": "",
        "name": "logo step 5 money",
        "order": 2,
        "width": "2",
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:left;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.ZsEyF4XrbcEReVmniANq5wHaHa%3Fpid%3DApi&f=1&ipt=282ca4e75f3ce46a39307fc91f45509e1f1431baaa4b9d3dd5c95470fa5997df&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"width:30%; height:70%; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "f14dafb0e3265efd",
        "type": "ui-text",
        "z": "0c9bdc5765c6cd51",
        "g": "126c7d82125e56f4",
        "group": "3401f62a03983bac",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "In dit contract geen nadere regelingen.",
        "label": "In dit contract geen nadere regelingen.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payloads",
        "valueType": "msg",
        "x": 210,
        "y": 360,
        "wires": []
    },
    {
        "id": "72d80bd348c2620f",
        "type": "ui-button",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "name": "Trigger Sim Afname",
        "label": "Trigger Sim Afname",
        "order": 4,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "5a1476bac03488bf"
            ]
        ]
    },
    {
        "id": "b94379509bd76ae9",
        "type": "ui-button",
        "z": "0c9bdc5765c6cd51",
        "g": "66c54fadcda953a6",
        "group": "66758debebab24aa",
        "name": "Trigger Sim Teruglevering",
        "label": "Trigger Sim Teruglevering",
        "order": 7,
        "width": "8",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "b29b9ca6561893db"
            ]
        ]
    },
    {
        "id": "inject_sunlight",
        "type": "inject",
        "z": "022d1ae1daec714a",
        "name": "Elke 5 min",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "fn_simulate",
                "986174d61c718481"
            ]
        ]
    },
    {
        "id": "fn_simulate",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "Simuleer zon & PV",
        "func": "// Simuleer zonlicht (0-100)\nlet sunlight = Math.floor(Math.random() * 101);\n// Bereken originele PV productie (max 5000 W)\nlet pv_original = Math.round(sunlight / 100 * 5000);\n\nmsg.payload = {\n    sunlight: sunlight,\n    pv_original: pv_original\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "fn_contract",
                "142a1ef04f54da4f",
                "0710d4fdfa96da9a"
            ]
        ]
    },
    {
        "id": "fn_contract",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "Smart contract regels",
        "func": "// Haal waarden op\nlet sunlight = msg.payload.sunlight;\nlet pv_original = msg.payload.pv_original;\n\n// Contractregels: hoe meer zon, hoe meer curtailing\nlet curtailment = 0;\nif (sunlight >= 30 && sunlight < 60) curtailment = 20;\nif (sunlight >= 60) curtailment = 40;\n\n// Bereken curtailed vermogen\nlet pv_curtailed = Math.round(pv_original * (1 - curtailment / 100));\n\n// Stel resultaat samen\nmsg.payload.curtailment = curtailment;\nmsg.payload.pv_curtailed = pv_curtailed;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "fn_settlement",
                "9e60b5eb52357ebe",
                "180b69fa72757a03"
            ]
        ]
    },
    {
        "id": "fn_settlement",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "Controle + blockchain",
        "func": "// Bepaal bonus/malus\nlet bonus_malus = \"bonus\"; // voor demo altijd bonus\n\n// Blockchain array ophalen\nlet chain = flow.get(\"blockchain\") || [];\n\n// Maak blok\nlet prev_hash = chain.length > 0 ? chain[chain.length - 1].hash : \"GENESIS\";\nlet block = {\n    timestamp: new Date().toISOString(),\n    sunlight: msg.payload.sunlight,\n    pv_original: msg.payload.pv_original,\n    curtailment: msg.payload.curtailment,\n    pv_curtailed: msg.payload.pv_curtailed,\n    bonus_malus: bonus_malus,\n    prev_hash: prev_hash\n};\n\n// Eenvoudige hash (stringify + btoa voor demo)\nblock.hash = Buffer.from(JSON.stringify(block)).toString(\"base64\").slice(0,20);\n\n// Voeg toe aan chain\nchain.push(block);\nflow.set(\"blockchain\", chain);\n\n// Zet output\nmsg.payload.block = block;\nmsg.payload.blockchain_length = chain.length;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "debug_blockchain",
                "da55a3ed982d5dd8"
            ]
        ]
    },
    {
        "id": "debug_blockchain",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "Toon blockchain",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "142a1ef04f54da4f",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "9e60b5eb52357ebe",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 280,
        "wires": []
    },
    {
        "id": "1b438ffa9a49b8b8",
        "type": "change",
        "z": "022d1ae1daec714a",
        "name": "get blockchain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blockchain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "5c83fb5f4361a3e8"
            ]
        ]
    },
    {
        "id": "eabe8dee83c99b85",
        "type": "inject",
        "z": "022d1ae1daec714a",
        "name": "1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "1b438ffa9a49b8b8"
            ]
        ]
    },
    {
        "id": "5c83fb5f4361a3e8",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 520,
        "wires": []
    },
    {
        "id": "798bc48377bec11a",
        "type": "function",
        "z": "022d1ae1daec714a",
        "d": true,
        "g": "a4883419bb76fe3b",
        "name": "maak factuur",
        "func": "// Haal de blockchain op\nlet chain = flow.get(\"blockchain\") || [];\n\n// Tellers\nlet bonusCount = 0;\nlet malusCount = 0;\n\n// Doorloop alle blokken\nchain.forEach(block => {\n    if (block.bonus_malus === \"bonus\") bonusCount++;\n    if (block.bonus_malus === \"malus\") malusCount++;\n});\n\n// Settlement-regels\nlet bonusValue = 0.10;   // €0,10 per bonus\nlet malusValue = -0.10;  // –€0,10 per malus\n\nlet totalAmount = (bonusCount * bonusValue) + (malusCount * malusValue);\n\n// Maak factuur\nlet invoice = {\n    prosumer: \"Prosumer_1\",\n    period_start: chain.length > 0 ? chain[0].timestamp : null,\n    period_end: chain.length > 0 ? chain[chain.length - 1].timestamp : null,\n    total_blocks: chain.length,\n    bonus_count: bonusCount,\n    malus_count: malusCount,\n    bonus_value: bonusValue,\n    malus_value: malusValue,\n    settlement_score: bonusCount - malusCount,\n    total_amount: totalAmount.toFixed(2) + \" EUR\"\n};\n\n// Output naar msg.payload\nmsg.payload = invoice;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 600,
        "wires": [
            [
                "30a323e98cac30cd",
                "e93f2e63812e8082"
            ],
            []
        ]
    },
    {
        "id": "741de7b25baffb6d",
        "type": "inject",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "798bc48377bec11a",
                "ac71f98f64ba2558"
            ]
        ]
    },
    {
        "id": "30a323e98cac30cd",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 600,
        "wires": []
    },
    {
        "id": "e93f2e63812e8082",
        "type": "function",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 640,
        "wires": [
            [
                "f91c9b19551b875a",
                "1957f2ef1fbcd432"
            ]
        ]
    },
    {
        "id": "f91c9b19551b875a",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 600,
        "wires": []
    },
    {
        "id": "1957f2ef1fbcd432",
        "type": "ui-table",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "group": "ddf4d837417e9b06",
        "name": "factuur curtailment",
        "label": "10 min update",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1070,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "0710d4fdfa96da9a",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 220,
        "wires": [
            [
                "71fe70ae61eb7027",
                "ede1a7206643663d"
            ]
        ]
    },
    {
        "id": "71fe70ae61eb7027",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 180,
        "wires": []
    },
    {
        "id": "ede1a7206643663d",
        "type": "ui-table",
        "z": "022d1ae1daec714a",
        "group": "c630745d48bd46c2",
        "name": "SIM zon en PV",
        "label": "table",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1060,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "180b69fa72757a03",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "33e3f022e78a914d",
                "5ee5990730338533"
            ]
        ]
    },
    {
        "id": "33e3f022e78a914d",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ee5990730338533",
        "type": "ui-table",
        "z": "022d1ae1daec714a",
        "group": "64328a3e42261266",
        "name": "Enkel Block",
        "label": "table",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "da55a3ed982d5dd8",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "3b71ccc58801e278",
                "0b01c3fb31f8cdeb"
            ]
        ]
    },
    {
        "id": "3b71ccc58801e278",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 380,
        "wires": []
    },
    {
        "id": "0b01c3fb31f8cdeb",
        "type": "ui-table",
        "z": "022d1ae1daec714a",
        "group": "cd1d7d4bbbdb652e",
        "name": "controle en block",
        "label": "table",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "77a7bd6eefd6a68c",
        "type": "ui-button",
        "z": "022d1ae1daec714a",
        "group": "c630745d48bd46c2",
        "name": "trigger",
        "label": "button",
        "order": 2,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "fn_simulate",
                "986174d61c718481"
            ]
        ]
    },
    {
        "id": "986174d61c718481",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "extract rules",
        "func": "// Statische contractregels zoals gedefinieerd in de Smart Contract node\nlet contractRules = {\n    max_pv: 5000,\n    curtailing_rules: [\n        {sunlight_range: \"<30\", curtailment: \"0%\"},\n        {sunlight_range: \"30-60\", curtailment: \"20%\"},\n        {sunlight_range: \">60\", curtailment: \"40%\"}\n    ],\n    bonus_malus: {\n        bonus: \"correcte curtailing +1 punt\",\n        malus: \"afwijkende curtailing -1 punt\"\n    },\n    description: \"Deze regels worden gebruikt door de Smart Contract node voor PV curtailment en bonus/malus.\"\n};\n\n// Output naar debug/dashboard\nmsg.payload = contractRules;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 100,
        "wires": [
            [
                "26bc515bea7cb524",
                "90f0e4e29c33c80b"
            ],
            []
        ]
    },
    {
        "id": "26bc515bea7cb524",
        "type": "function",
        "z": "022d1ae1daec714a",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 100,
        "wires": [
            [
                "8a5898d0a7824d8f"
            ]
        ]
    },
    {
        "id": "8a5898d0a7824d8f",
        "type": "ui-table",
        "z": "022d1ae1daec714a",
        "group": "6cfd4e6f6de7eae6",
        "name": "rules of contract",
        "label": "table",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1060,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "90f0e4e29c33c80b",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 60,
        "wires": []
    },
    {
        "id": "d6b855bed9054110",
        "type": "function",
        "z": "022d1ae1daec714a",
        "g": "ff49c9cb0c3079e4",
        "name": "reset blockchain",
        "func": "// Reset de blockchain in flow context\nflow.set(\"blockchain\", []);\n\n// Optioneel: debug-output\nmsg.payload = {\n    message: \"Blockchain is gereset. Schone start voor simulatie.\",\n    blockchain_length: 0\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1100,
        "wires": [
            [
                "38eb8cf0dfb0325d"
            ]
        ]
    },
    {
        "id": "e96d4efb2c101c75",
        "type": "inject",
        "z": "022d1ae1daec714a",
        "g": "ff49c9cb0c3079e4",
        "name": "reset ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 1100,
        "wires": [
            [
                "d6b855bed9054110"
            ]
        ]
    },
    {
        "id": "38eb8cf0dfb0325d",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "g": "ff49c9cb0c3079e4",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fbd14b6b35a28718",
        "type": "ui-button",
        "z": "022d1ae1daec714a",
        "g": "ff49c9cb0c3079e4",
        "group": "ddf4d837417e9b06",
        "name": "reset blockchain",
        "label": "reset blockchain",
        "order": 2,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "d6b855bed9054110"
            ]
        ]
    },
    {
        "id": "ac71f98f64ba2558",
        "type": "function",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "maak factuur zonder null blocks",
        "func": "// Haal de blockchain op\nlet chain = flow.get(\"blockchain\") || [];\n\n// Filter alleen blocks met data (bonus of malus)\nlet filledBlocks = chain.filter(block => block.bonus_malus === \"bonus\" || block.bonus_malus === \"malus\");\n\n// Tellers\nlet bonusCount = 0;\nlet malusCount = 0;\n\n// Doorloop alle gefilterde blokken\nfilledBlocks.forEach(block => {\n    if (block.bonus_malus === \"bonus\") bonusCount++;\n    if (block.bonus_malus === \"malus\") malusCount++;\n});\n\n// Settlement-regels\nlet bonusValue = 0.10;   // €0,10 per bonus\nlet malusValue = -0.10;  // –€0,10 per malus\n\nlet totalAmount = (bonusCount * bonusValue) + (malusCount * malusValue);\n\n// Maak factuur\nlet invoice = {\n    prosumer: \"Prosumer_1\",\n    period_start: filledBlocks.length > 0 ? filledBlocks[0].timestamp : null,\n    period_end: filledBlocks.length > 0 ? filledBlocks[filledBlocks.length - 1].timestamp : null,\n    total_blocks: filledBlocks.length, // Alleen blocks met data\n    bonus_count: bonusCount,\n    malus_count: malusCount,\n    bonus_value: bonusValue,\n    malus_value: malusValue,\n    settlement_score: bonusCount - malusCount,\n    total_amount: totalAmount.toFixed(2) + \" EUR\"\n};\n\n// Output naar msg.payload\nmsg.payload = invoice;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 640,
        "wires": [
            [
                "e93f2e63812e8082"
            ],
            [
                "dd156ea41e0fb4b7"
            ]
        ]
    },
    {
        "id": "f9ec509595f66cce",
        "type": "mqtt out",
        "z": "022d1ae1daec714a",
        "g": "ed0bdd641867c624",
        "name": "CloudAMQP vpp/d1c2",
        "topic": "vpp/d1c2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74e0977c546da2fd",
        "x": 740,
        "y": 840,
        "wires": []
    },
    {
        "id": "0d9975b970a4578f",
        "type": "mqtt in",
        "z": "022d1ae1daec714a",
        "g": "ed0bdd641867c624",
        "name": "CloudAMQP d1c2",
        "topic": "vpp/d1c2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 880,
        "wires": [
            [
                "e7db6e55ee29e7f7"
            ]
        ]
    },
    {
        "id": "e7db6e55ee29e7f7",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "g": "ed0bdd641867c624",
        "name": "debug 59",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 880,
        "wires": []
    },
    {
        "id": "dd156ea41e0fb4b7",
        "type": "change",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "set flow lastinvoice",
        "rules": [
            {
                "t": "set",
                "p": "lastinvoice",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "e41d8de910a46212"
            ]
        ]
    },
    {
        "id": "6b7f943d31962387",
        "type": "change",
        "z": "022d1ae1daec714a",
        "g": "ed0bdd641867c624",
        "name": "get flow lastinvoice",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lastinvoice",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "f9ec509595f66cce"
            ]
        ]
    },
    {
        "id": "5dbe6b029389ac6e",
        "type": "inject",
        "z": "022d1ae1daec714a",
        "g": "ed0bdd641867c624",
        "name": "10 min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "6b7f943d31962387"
            ]
        ]
    },
    {
        "id": "e41d8de910a46212",
        "type": "debug",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "debug 60",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 700,
        "wires": []
    },
    {
        "id": "d3d2bb74c937e48d",
        "type": "comment",
        "z": "022d1ae1daec714a",
        "g": "a4883419bb76fe3b",
        "name": "Step 5 - Settlement",
        "info": "",
        "x": 130,
        "y": 580,
        "wires": []
    },
    {
        "id": "30f8ca3cf58987b2",
        "type": "comment",
        "z": "022d1ae1daec714a",
        "g": "ff49c9cb0c3079e4",
        "name": "For simulation: reset blockchain to empty",
        "info": "",
        "x": 200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "78d6305639cf69b1",
        "type": "file",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "Log measurement",
        "filename": "quasi_blockchain.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "352821c59214c97a"
            ]
        ]
    },
    {
        "id": "ac08adc524a49168",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "trigger settlement",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iso",
        "payloadType": "date",
        "x": 150,
        "y": 1580,
        "wires": [
            [
                "3473e525d9e738bc"
            ]
        ]
    },
    {
        "id": "3473e525d9e738bc",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "Settlement calculation",
        "func": "let data = flow.get('measurements') || [];\nlet contract = flow.get('contract');\n\nlet totalRecords = data.length;\nlet offRecords = data.filter(r=>r.status==='off').length;\n\nlet fulfilled = (offRecords === totalRecords);\nlet actualDeltaKWh = (offRecords/totalRecords) * contract.participant.committedKWh;\nlet reward = fulfilled ? contract.pricePerKWh * actualDeltaKWh : contract.pricePerKWh * actualDeltaKWh;\nlet penalty = fulfilled ? 0 : contract.penaltyPerKWh * (contract.participant.committedKWh - actualDeltaKWh);\nlet refund = contract.participant.deposit - penalty;\n\nlet settlement = {\n    timestamp: new Date().toISOString(),\n    contractId: contract.contractId,\n    participantId: contract.participant.id,\n    fulfilled,\n    actualDeltaKWh,\n    reward,\n    penalty,\n    refund\n};\n\nflow.set('lastSettlement', settlement);\nflow.set('measurements', []); // reset for next day\n\nmsg.payload = settlement;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1580,
        "wires": [
            [
                "bbbf9f12b3d2ac9a",
                "aed881f7fa2381c1"
            ]
        ]
    },
    {
        "id": "bbbf9f12b3d2ac9a",
        "type": "file",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "Log Settlement",
        "filename": "quasi_blockchain.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 600,
        "y": 1580,
        "wires": [
            [
                "f3ade05de44da303"
            ]
        ]
    },
    {
        "id": "f3ade05de44da303",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "Settlement result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c6694b8902fb87e1",
        "type": "file in",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "read log",
        "filename": "quasi_blockchain.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "27a59de08d4c1d19",
                "95b90696b8d657b5"
            ]
        ]
    },
    {
        "id": "3b276ac6e3d5816c",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 1660,
        "wires": [
            [
                "c6694b8902fb87e1"
            ]
        ]
    },
    {
        "id": "27a59de08d4c1d19",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3ba3e8bcb5b90838",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 1780,
        "wires": [
            [
                "02192639c0b06f80"
            ]
        ]
    },
    {
        "id": "8bd90b9e524c97c4",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "meetkamer",
        "info": "",
        "x": 140,
        "y": 980,
        "wires": []
    },
    {
        "id": "366fd95fdb4f9b6d",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "settlement",
        "info": "",
        "x": 100,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f7709dab8fb6e386",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "TRIGGER",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "4a987a0e40c4b03d"
            ]
        ]
    },
    {
        "id": "c0ed3e10e0b58475",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "02192639c0b06f80",
        "type": "file",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "delete quasi_blockchain.json",
        "filename": "quasi_blockchain.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 1800,
        "wires": [
            [
                "8bc928ebd82d5cb8"
            ]
        ]
    },
    {
        "id": "8bc928ebd82d5cb8",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1800,
        "wires": []
    },
    {
        "id": "4a987a0e40c4b03d",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "Init contract",
        "func": "// Controleer eerst of het contract al bestaat\nlet contract = flow.get('contract');\n\nif(!contract){\n    // Definieer het contract object\n    contract = {\n        contractId: 'demo1',\n        description: 'Load shifting contract boiler',\n        schedule: { startTime: '17:00', endTime: '20:00' },\n        pricePerKWh: 0.2,\n        penaltyPerKWh: 0.1,\n        participant: { id: 'Boiler01', committedKWh: 2, deposit: 0.2 }\n    };\n\n    // Sla het contract op in de flow-context\n    flow.set('contract', contract);\n    node.warn(\"Contract initialized in flow context.\"); // Optioneel: log voor debugging\n}\n\n// We hoeven niets door te sturen, maar msg kan nog steeds doorgaan\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "c0ed3e10e0b58475"
            ]
        ]
    },
    {
        "id": "3b9e860a0789151a",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "d42316d8430f48d1"
            ]
        ]
    },
    {
        "id": "d42316d8430f48d1",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "GET CONTRACT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "contract",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "cb373c36bc9677be",
                "57041e5396464aa6"
            ]
        ]
    },
    {
        "id": "cb373c36bc9677be",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "bca253d780682465",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "d": true,
        "g": "8ececd261d2329f9",
        "name": "automatische uitschakeling op basis van contract",
        "func": "// 1️⃣ Haal het contract op uit de flow-context\nlet contract = flow.get('contract');\nif(!contract){\n    node.error(\"Geen contract gevonden in flow-context!\");\n    return null;\n}\n\n// 2️⃣ Haal het schema uit het contract\nlet schedule = contract.schedule;\nif(!schedule || !schedule.startTime || !schedule.endTime){\n    node.error(\"Geen geldig schema gevonden in contract!\");\n    return null;\n}\n\n// 3️⃣ Bepaal huidige tijd\nlet now = new Date();\nlet currentTime = now.getHours() * 60 + now.getMinutes(); // minuten sinds middernacht\n\n// 4️⃣ Converteer schema tijden naar minuten sinds middernacht\nfunction timeToMinutes(timeStr) {\n    let parts = timeStr.split(':');\n    return parseInt(parts[0], 10) * 60 + parseInt(parts[1], 10);\n}\n\nlet startMinutes = timeToMinutes(schedule.startTime);\nlet endMinutes = timeToMinutes(schedule.endTime);\n\n// 5️⃣ Beslis of we moeten uitschakelen of inschakelen\nlet action = (currentTime >= startMinutes && currentTime <= endMinutes) ? \"OFF\" : \"ON\";\n\n// 6️⃣ Zet het MQTT-bericht in msg.payload\nmsg.payload = action;\n\n// 7️⃣ Eventueel loggen voor debug\nnode.status({fill: action === \"OFF\" ? \"red\" : \"green\", shape:\"dot\", text: action});\n\n// 8️⃣ Bericht doorsturen naar een MQTT-out node\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4bc7b0bd798f94cc",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "bca253d780682465",
                "f8a4d181d8831028"
            ]
        ]
    },
    {
        "id": "221d33f80f5cd8e1",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "STAP 1 Contract Kamer",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "f8a4d181d8831028",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "boiler automatisch schakelen op basis van contract schedule",
        "func": "// 1️⃣ Haal het contract op uit de flow-context\n// We gebruiken flow.get('contract') omdat het contract éénmalig wordt geïnitialiseerd in een aparte node\n// en we het overal in de flow willen kunnen gebruiken. Flow-context is hier ideaal omdat het beperkt blijft tot deze flow.\n// Alternatief: global context gebruiken, maar dat zou het contract delen met andere flows wat meestal niet gewenst is.\nlet contract = flow.get('contract');\n\n// Controleer of het contract bestaat\n// Als er geen contract in de flow-context zit, is er iets mis. We stoppen de functie en loggen een fout.\n// return null voorkomt dat de node verder probeert te werken met een undefined contract, wat fouten zou veroorzaken.\nif(!contract){\n    node.error(\"Geen contract gevonden in flow-context!\");\n    return null;\n}\n\n// 2️⃣ Haal het schema uit het contract\n// Het schema bevat de tijden waarop de load shifting actief moet zijn\n// We controleren ook hier of startTime en endTime bestaan om fouten te voorkomen.\nlet schedule = contract.schedule;\nif(!schedule || !schedule.startTime || !schedule.endTime){\n    node.error(\"Geen geldig schema gevonden in contract!\");\n    return null;\n}\n\n// 3️⃣ Bepaal huidige tijd\n// We gebruiken JavaScript Date() object. currentTime wordt omgezet naar minuten sinds middernacht\n// zodat we eenvoudig een numerieke vergelijking kunnen doen tussen start- en eindtijd.\n// Alternatief: strings vergelijken (bijv. \"17:00\" <= now <= \"20:00\") werkt niet goed omdat stringvergelijkingen fouten kunnen geven.\nlet now = new Date();\nlet currentTime = now.getHours() * 60 + now.getMinutes(); // minuten sinds middernacht\n\n// 4️⃣ Converteer schema tijden naar minuten sinds middernacht\n// Functie timeToMinutes converteert bijv. \"17:00\" naar 1020 minuten (17*60 + 0)\n// Dit maakt het vergelijken van tijden simpel en betrouwbaar.\nfunction timeToMinutes(timeStr) {\n    let parts = timeStr.split(':');          // splits \"HH:MM\" in een array [HH, MM]\n    return parseInt(parts[0], 10) * 60 + parseInt(parts[1], 10); // uren naar minuten + minuten\n}\n\n// Pas de functie toe op start- en eindtijd van het schema\nlet startMinutes = timeToMinutes(schedule.startTime);\nlet endMinutes = timeToMinutes(schedule.endTime);\n\n// 5️⃣ Beslis of we moeten uitschakelen of inschakelen\n// Als currentTime binnen het contractvenster valt, sturen we \"OFF\" (boiler uit), anders \"ON\" (boiler aan)\n// De ternary operator is hier compact en overzichtelijk.\n// Alternatief: een if/else blok kan ook, maar voor 2 opties is dit eleganter.\nlet action = (currentTime >= startMinutes && currentTime <= endMinutes) ? \"off\" : \"on\";\n\n// 6️⃣ Zet het MQTT-bericht in msg.payload\n// MQTT-out node stuurt automatisch de inhoud van msg.payload\n// msg.payload is de standaard manier in Node-RED om data door te geven tussen nodes.\nmsg.payload = action;\n\n// 7️⃣ Eventueel loggen voor debug\n// node.status() laat visuele feedback zien in de editor, handig voor debug en monitoring.\n// We kleuren de status rood voor OFF en groen voor ON om in één oogopslag te zien wat de node doet.\nnode.status({fill: action === \"off\" ? \"red\" : \"green\", shape:\"dot\", text: action});\n\n// 8️⃣ Bericht doorsturen naar een MQTT-out node\n// Door msg terug te geven met return msg, wordt het bericht doorgegeven naar de volgende node.\n// Dit is de standaard manier in Node-RED.\nreturn msg;\n\n// Opmerking: de tweede \"return msg;\" aan het eind is overbodig en kan worden verwijderd.\n// De functie stopt bij de eerste return msg;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 400,
        "wires": [
            [
                "1c9dd1c2415946e9"
            ]
        ]
    },
    {
        "id": "61417258dfa2cc55",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 320,
        "wires": []
    },
    {
        "id": "1c9dd1c2415946e9",
        "type": "rbe",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "pass if changed",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 820,
        "y": 400,
        "wires": [
            [
                "61417258dfa2cc55",
                "09bb12824ce1366d",
                "fcb109adfae50c24"
            ]
        ]
    },
    {
        "id": "ada311ab98140756",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "Automatische executie op basis van contract",
        "info": "",
        "x": 430,
        "y": 300,
        "wires": []
    },
    {
        "id": "785d4f345f8805c7",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "read and get measurement",
        "func": "// 1️⃣ Ophalen van de laatste status uit flow-context\n// We gaan ervan uit dat de Add Measurement functie msg.payload als \"ON\" of \"OFF\" opslaat\nlet latest = flow.get('latestMeasurement');\n\n// 2️⃣ Als er nog geen meetwaarde is, stuur default waarde\nif(latest === undefined){\n    latest = \"UNKNOWN\"; // kan ook \"ON\" of \"OFF\" als fallback\n}\n\n// 3️⃣ Bepaal de huidige tijd als timestamp\n// We gebruiken ISO-formaat zodat het universeel bruikbaar is (bijv. 2025-09-04T14:35:00Z)\nlet timestamp = new Date().toISOString();\n\n// 4️⃣ Maak een object met status + timestamp\nmsg.payload = {\n    status: latest,       // \"ON\" of \"OFF\"\n    timestamp: timestamp  // huidige tijd\n};\n\n// 5️⃣ Optioneel: opslaan in flow-context voor snelle toegang door andere nodes\nflow.set('latestMeasurementWithTimestamp', msg.payload);\n\n// 6️⃣ Bericht doorsturen naar volgende node (bijv. MQTT-out of dashboard)\nreturn msg;\n\n/*\nWaarom zo:\n- We gebruiken flow-context voor 'latestMeasurement' zodat de functie niet afhankelijk is van binnenkomende arrays.\n- Timestamp in ISO-formaat is universeel en kan makkelijk worden verwerkt door dashboard, MQTT clients of databases.\n- Door een object te maken met status + timestamp kan de payload makkelijk uitbreidbaar zijn (bijv. toevoegen van deviceId of extra info later).\n- msg.payload is de standaard manier om data door te geven in Node-RED.\n*/\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1080,
        "wires": [
            [
                "78d6305639cf69b1",
                "61e2bc4baec11ada",
                "6ba45dde323fe64e"
            ]
        ]
    },
    {
        "id": "47bd6cbaa3fbf4f5",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "2da8fcaeabc6f739"
            ]
        ]
    },
    {
        "id": "352821c59214c97a",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1080,
        "wires": []
    },
    {
        "id": "98b0997593d37433",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "Uitvoeringskamer",
        "info": "",
        "x": 140,
        "y": 300,
        "wires": []
    },
    {
        "id": "785b1ba98728c98a",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "trigger on",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "cd29e0b8b711df37"
            ]
        ]
    },
    {
        "id": "23942f3909ac0ec7",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "trigger off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 140,
        "y": 580,
        "wires": [
            [
                "497ab16704df5f49"
            ]
        ]
    },
    {
        "id": "f6205ff273869cae",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "Boiler handmatig schakelen",
        "info": "",
        "x": 380,
        "y": 500,
        "wires": []
    },
    {
        "id": "7ab085b16fe32b99",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "Uitvoeringskamer",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "cd29e0b8b711df37",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "set boilerstatus",
        "rules": [
            {
                "t": "set",
                "p": "boilerstatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "0a2eae584da90771"
            ]
        ]
    },
    {
        "id": "4ab0c212c80bfea2",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "name": "boilerstatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "boilerstatus",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 780,
        "wires": [
            [
                "be0d2550aaf67e40",
                "298cf74711a56461",
                "3340b74acc54e1a8"
            ]
        ]
    },
    {
        "id": "06ee7544585b2597",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "4ab0c212c80bfea2"
            ]
        ]
    },
    {
        "id": "be0d2550aaf67e40",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 740,
        "wires": []
    },
    {
        "id": "2da8fcaeabc6f739",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "boilerstatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "boilerstatus",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "9e2f0a7f183d77bc",
                "6cf8981486880679",
                "785d4f345f8805c7",
                "9f46b267f8f9abc9"
            ]
        ]
    },
    {
        "id": "26c3f1d4e16c2cb3",
        "type": "comment",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "name": "Gesimuleerde boiler",
        "info": "",
        "x": 150,
        "y": 740,
        "wires": []
    },
    {
        "id": "09bb12824ce1366d",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "name": "set boilerstatus",
        "rules": [
            {
                "t": "set",
                "p": "boilerstatus",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "0a2eae584da90771",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "95b90696b8d657b5",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "Final settlement",
        "func": "let totalReward  = 0;\nlet totalPenalty = 0;\nlet totalRefund  = 0;\n\nlet lines = [];\n\n// 1️⃣ Controleer payload type\nif(typeof msg.payload === \"string\"){\n    // payload is tekst → split op \\n\n    lines = msg.payload.split(\"\\n\");\n} else if(Array.isArray(msg.payload)){\n    // payload is al een array → gebruik direct\n    lines = msg.payload;\n} else {\n    node.error(\"msg.payload is geen string of array!\");\n    return null;\n}\n\n// 2️⃣ Loop door alle regels\nlines.forEach(line => {\n    // Zorg dat lege regels worden overgeslagen\n    if(!line || line.trim() === \"\") return;\n\n    let obj;\n    try {\n        // Als payload al object is, gebruik direct, anders parse string\n        obj = (typeof line === \"string\") ? JSON.parse(line) : line;\n    } catch(e) {\n        node.warn(\"Kon regel niet parsen: \" + line);\n        return;\n    }\n\n    // 3️⃣ Tel de values op\n    if(obj.reward)  totalReward  += obj.reward;\n    if(obj.penalty) totalPenalty += obj.penalty;\n    if(obj.refund)  totalRefund  += obj.refund;\n});\n\n// 4️⃣ Bereken final settlement\nlet finalSettlement = totalReward - totalPenalty + totalRefund;\n\n// 5️⃣ Plaats alles in msg.payload\nmsg.payload = {\n    totalReward: totalReward,\n    totalPenalty: totalPenalty,\n    totalRefund: totalRefund,\n    finalSettlement: finalSettlement\n};\n\n// 6️⃣ Debug status\nnode.status({fill:\"blue\", shape:\"dot\", text:\"Final Settlement berekend\"});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1680,
        "wires": [
            [
                "1c674855ebc2e064",
                "e209e0c88232eb4b"
            ]
        ]
    },
    {
        "id": "1c674855ebc2e064",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1640,
        "wires": []
    },
    {
        "id": "497ab16704df5f49",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "set boilerstatus",
        "rules": [
            {
                "t": "set",
                "p": "boilerstatus",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 580,
        "wires": [
            [
                "0a2eae584da90771"
            ]
        ]
    },
    {
        "id": "e209e0c88232eb4b",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1700,
        "wires": [
            [
                "0adcad774ba1b390"
            ]
        ]
    },
    {
        "id": "57041e5396464aa6",
        "type": "function",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 200,
        "wires": [
            [
                "f93ff6ce3f430871"
            ]
        ]
    },
    {
        "id": "760ea8f9c7ac9ca9",
        "type": "ui-switch",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "Aan uit",
        "label": "Boiler Manual Override: OFF <> ON",
        "group": "301734756c402daf",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "",
        "clickableArea": "switch",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "8d9c8dad0fc5ef2c"
            ]
        ]
    },
    {
        "id": "8d9c8dad0fc5ef2c",
        "type": "switch",
        "z": "9a43a330495ae6b2",
        "g": "6ce510c71b38ba43",
        "name": "Switch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 620,
        "wires": [
            [
                "cd29e0b8b711df37"
            ],
            [
                "497ab16704df5f49"
            ]
        ]
    },
    {
        "id": "5b5e1853dddd3e90",
        "type": "ui-text",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "group": "b0c4d1e7b27ff150",
        "order": 1,
        "width": "3",
        "height": "2",
        "name": "Boiler Status",
        "label": "Boiler Status",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#0f0f0f",
        "className": "",
        "x": 830,
        "y": 980,
        "wires": []
    },
    {
        "id": "6cf8981486880679",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "ON =1 OFF=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1020,
        "wires": [
            [
                "5b5e1853dddd3e90",
                "7f35463d2ae7104f",
                "810fdf59ea8bfc90"
            ]
        ]
    },
    {
        "id": "61e2bc4baec11ada",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1160,
        "wires": []
    },
    {
        "id": "fcb109adfae50c24",
        "type": "ui-text",
        "z": "9a43a330495ae6b2",
        "g": "8ececd261d2329f9",
        "group": "301734756c402daf",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "Automatische Schakeling",
        "label": "Automatische Schakeling volgens contract schedule:: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#0a0a0a",
        "className": "",
        "x": 1050,
        "y": 360,
        "wires": []
    },
    {
        "id": "298cf74711a56461",
        "type": "ui-text",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "group": "301734756c402daf",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "Status Boiler",
        "label": "Boiler Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#0a0a0a",
        "className": "",
        "x": 530,
        "y": 780,
        "wires": []
    },
    {
        "id": "e106f555789a9aee",
        "type": "ui-button",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "group": "74c3326dbc89c4b3",
        "name": "remove quasi blockchain",
        "label": "remove quasi blockchain",
        "order": 3,
        "width": "6",
        "height": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1820,
        "wires": [
            [
                "02192639c0b06f80"
            ]
        ]
    },
    {
        "id": "9de8d16a91da609f",
        "type": "ui-button",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "group": "74c3326dbc89c4b3",
        "name": "Update settlement",
        "label": "Update Settlement",
        "order": 2,
        "width": "6",
        "height": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1700,
        "wires": [
            [
                "c6694b8902fb87e1"
            ]
        ]
    },
    {
        "id": "7f35463d2ae7104f",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 980,
        "wires": []
    },
    {
        "id": "f93ff6ce3f430871",
        "type": "ui-table",
        "z": "9a43a330495ae6b2",
        "g": "410d75efd9b67907",
        "group": "b228ba8cc54b6f28",
        "name": "",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "6",
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "append",
        "className": "",
        "x": 870,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9f46b267f8f9abc9",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9e2f0a7f183d77bc",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 980,
        "wires": []
    },
    {
        "id": "810fdf59ea8bfc90",
        "type": "ui-chart",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "group": "b0c4d1e7b27ff150",
        "name": "chart",
        "label": "chart",
        "order": 2,
        "chartType": "line",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "time",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "aan uit",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "0",
        "ymax": "1",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "dash",
        "pointRadius": "7",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "4",
        "className": "",
        "interpolation": "step",
        "x": 950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "0adcad774ba1b390",
        "type": "ui-table",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "group": "74c3326dbc89c4b3",
        "name": "",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "4",
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "append",
        "className": "",
        "x": 1050,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "9c1d9c567c6cc7f1",
        "type": "ui-template",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "group": "301734756c402daf",
        "page": "",
        "ui": "",
        "name": "foto boiler",
        "order": 3,
        "width": "6",
        "height": "8",
        "head": "",
        "format": "<div style=\"text-align:right;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%2Fid%2FOIP.cTWKhRfH_j-2j46QU_DA7gHaHa%3Fpid%3DApi&f=1&ipt=584cc48e7fcb9d9b3fb709f63f125ca31118209160c97f8d808c415858c0463d&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"max-width:100%; height:auto; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "3340b74acc54e1a8",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "90f832a7e9ee3928",
        "name": "set latestMeasurment",
        "rules": [
            {
                "t": "set",
                "p": "latestMeasurement",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "dade29a643552a77",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 1200,
        "wires": [
            [
                "cf41b07d7308831f"
            ]
        ]
    },
    {
        "id": "cf41b07d7308831f",
        "type": "file in",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "read log",
        "filename": "quasi_blockchain.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 540,
        "y": 1200,
        "wires": [
            [
                "d79c487a5ca7e00f"
            ]
        ]
    },
    {
        "id": "d79c487a5ca7e00f",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1200,
        "wires": []
    },
    {
        "id": "aed881f7fa2381c1",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "7d0803a850d2269a",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6ba45dde323fe64e",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "set flow measurements",
        "rules": [
            {
                "t": "set",
                "p": "measurements",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "86452fef96ea7530",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "get measurements",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "measurements",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1260,
        "wires": [
            [
                "5f70cf77b2eb20e0"
            ]
        ]
    },
    {
        "id": "01bf44039457ccfc",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "86452fef96ea7530"
            ]
        ]
    },
    {
        "id": "5f70cf77b2eb20e0",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "g": "2833efd508051044",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1260,
        "wires": []
    },
    {
        "id": "76b3e26ecade48ad",
        "type": "change",
        "z": "9a43a330495ae6b2",
        "name": "get contract",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "contract",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "90880411df331008"
            ]
        ]
    },
    {
        "id": "afa80c184833ed77",
        "type": "inject",
        "z": "9a43a330495ae6b2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1060,
        "y": 60,
        "wires": [
            [
                "76b3e26ecade48ad"
            ]
        ]
    },
    {
        "id": "90880411df331008",
        "type": "debug",
        "z": "9a43a330495ae6b2",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "init_assets",
        "type": "inject",
        "z": "f1",
        "name": "Initialize Assets",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "once": true,
        "onceDelay": "0.1",
        "payload": "[]",
        "payloadType": "json",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "define_assets"
            ]
        ]
    },
    {
        "id": "define_assets",
        "type": "function",
        "z": "f1",
        "name": "Define Load Assets",
        "func": "// Define energy-consuming assets for load shifting\nvar assets = [\n    { name: 'EV Charger', maxLoad: 3, available: true },\n    { name: 'Heat Pump', maxLoad: 2, available: true },\n    { name: 'Washer', maxLoad: 1, available: true }\n];\n\nflow.set('assets', assets);\nmsg.payload = assets;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 60,
        "wires": [
            [
                "debug_assets",
                "4ce6bca34e8a3559"
            ]
        ]
    },
    {
        "id": "debug_assets",
        "type": "debug",
        "z": "f1",
        "name": "Debug Assets",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "contract_loadshift",
        "type": "function",
        "z": "f1",
        "name": "Load Shifting Contract",
        "func": "// Implement load shifting between 17:00 and 20:00\nvar assets = flow.get('assets') || [];\nvar now = new Date();\nvar hour = now.getHours();\nvar payload = [];\n\nfor(var i=0; i<assets.length; i++) {\n    var asset = assets[i];\n    var load = 0;\n    // Only allow consumption in off-peak hours, i.e., shift load to 17-20\n    if(hour >= 17 && hour < 20 && asset.available) {\n        load = asset.maxLoad;\n    }\n    payload.push({ asset: asset.name, scheduledLoad: load, status: asset.available ? 'active' : 'inactive' });\n}\n\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "dummy_assets",
                "a4032ed6879df7ae",
                "51490f62487ad05c",
                "b73825c1f769e2e1"
            ]
        ]
    },
    {
        "id": "dummy_assets",
        "type": "function",
        "z": "f1",
        "d": true,
        "name": "Dummy Asset Simulation",
        "func": "// Simulate actual consumption with ±5% variation\nvar commands = msg.payload;\nvar measured = commands.map(function(cmd) {\n    var actualLoad = Math.max(0, cmd.scheduledLoad * (0.95 + 0.1 * Math.random()));\n    return { asset: cmd.asset, scheduledLoad: cmd.scheduledLoad, actualLoad: actualLoad, status: cmd.status };\n});\n\nmsg.payload = measured;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 460,
        "wires": [
            [
                "settlement_calculation",
                "91aac3c7191f4e24"
            ]
        ]
    },
    {
        "id": "settlement_calculation",
        "type": "function",
        "z": "f1",
        "d": true,
        "name": "Settlement Calculation",
        "func": "// Calculate total shifted load\nvar measured = msg.payload;\nvar totalScheduled = 0;\nvar totalActual = 0;\nfor(var i=0; i<measured.length; i++) {\n    totalScheduled += measured[i].scheduledLoad;\n    totalActual += measured[i].actualLoad;\n}\n\nmsg.payload = {\n    totalScheduled: totalScheduled,\n    totalActual: totalActual,\n    compliance: totalActual >= totalScheduled * 0.95,\n    details: measured\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 540,
        "wires": [
            [
                "debug_settlement",
                "03285f9c197fdfbf"
            ]
        ]
    },
    {
        "id": "debug_settlement",
        "type": "debug",
        "z": "f1",
        "name": "Debug Settlement",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "8086ae43ff100db7",
        "type": "inject",
        "z": "f1",
        "name": "1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "contract_loadshift"
            ]
        ]
    },
    {
        "id": "03285f9c197fdfbf",
        "type": "ui-text",
        "z": "f1",
        "group": "4923fe7292e245ec",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "settlement",
        "label": "settlement",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#080808",
        "className": "",
        "x": 790,
        "y": 540,
        "wires": []
    },
    {
        "id": "193b8c16c1d87b47",
        "type": "ui-button",
        "z": "f1",
        "group": "4923fe7292e245ec",
        "name": "Commit assets",
        "label": "Commit assets",
        "order": 1,
        "width": 0,
        "height": 0,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "define_assets"
            ]
        ]
    },
    {
        "id": "4ce6bca34e8a3559",
        "type": "ui-text",
        "z": "f1",
        "group": "4923fe7292e245ec",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "asset list",
        "label": "asset list",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#0d0c0c",
        "className": "",
        "x": 630,
        "y": 118,
        "wires": []
    },
    {
        "id": "a4032ed6879df7ae",
        "type": "ui-text",
        "z": "f1",
        "group": "4923fe7292e245ec",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Contract",
        "label": "Contract",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#0f0f0f",
        "className": "",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "3fc9e8a2378c35bb",
        "type": "ui-button",
        "z": "f1",
        "group": "4923fe7292e245ec",
        "name": "activate contract",
        "label": "Activate Contract",
        "order": 3,
        "width": 0,
        "height": 0,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "contract_loadshift"
            ]
        ]
    },
    {
        "id": "91aac3c7191f4e24",
        "type": "function",
        "z": "f1",
        "name": "function 3",
        "func": "// ================================\n// Berekening van totale verschoven belasting\n// ================================\n\n// Verkrijg de gemeten waarden uit de inkomende boodschap\n// msg.payload wordt verondersteld een array van objecten te zijn, \n// waarbij elk object twee eigenschappen heeft:\n// - scheduledLoad: de geplande belasting voor deze periode\n// - actualLoad: de daadwerkelijk gemeten belasting voor deze periode\nvar measured = msg.payload;\n\n// Initialiseer variabelen om de som van de geplande en werkelijke belastingen bij te houden\nvar totalScheduled = 0; // accumulator voor alle geplande belastingen\nvar totalActual = 0;    // accumulator voor alle werkelijke belastingen\n\n// Controle op randgeval: als de array leeg is\n// (optioneel, niet in de originele code, maar nuttig in productie)\nif (!Array.isArray(measured) || measured.length === 0) {\n    // Als er geen data is, zijn de totalen nul en compliance false\n    msg.payload = {\n        totalScheduled: 0,\n        totalActual: 0,\n        compliance: false,\n        details: []\n    };\n    return msg;\n}\n\n// Itereer door elk element in de array\nfor (var i = 0; i < measured.length; i++) {\n    var item = measured[i]; // huidige meetwaarde\n    \n    // Voeg de geplande belasting toe aan het totaal\n    // scheduledLoad wordt verondersteld een numerieke waarde te zijn\n    totalScheduled += item.scheduledLoad;\n    \n    // Voeg de werkelijke belasting toe aan het totaal\n    // actualLoad wordt verondersteld een numerieke waarde te zijn\n    totalActual += item.actualLoad;\n}\n\n// Bepaal compliance: voldoet de werkelijke belasting aan de doelstelling?\n// Hier wordt een drempel van 95% gebruikt:\n// - totalActual >= totalScheduled * 0.95\n// - Dit betekent dat de werkelijke belasting minimaal 95% van de geplande belasting moet zijn\n// - Waarom 95%? Vaak wordt een marge toegestaan in energie- of load management systemen\n//   omdat perfect volgen zelden mogelijk is door variabiliteit in productie of verbruik\nvar compliance = totalActual >= totalScheduled * 0.95;\n\n// Stel het payload van de uitgaande boodschap samen\n// - totalScheduled: totale geplande belasting\n// - totalActual: totale werkelijke belasting\n// - compliance: boolean die aangeeft of het doel is gehaald\n// - details: alle oorspronkelijke meetwaarden voor mogelijke verdere analyse\nmsg.payload = {\n    totalScheduled: totalScheduled,\n    totalActual: totalActual,\n    compliance: compliance,\n    details: measured\n};\n\n// Retourneer de boodschap zodat de volgende nodes in een Node-RED flow deze kunnen verwerken\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 540,
        "wires": [
            [
                "debug_settlement",
                "03285f9c197fdfbf"
            ]
        ]
    },
    {
        "id": "51490f62487ad05c",
        "type": "function",
        "z": "f1",
        "d": true,
        "name": "random incrementing sim",
        "func": "// Verkrijg de input: geplande commando's en eventueel vorige metingen\nvar commands = msg.payload.commands;   // array van geplande lasten\nvar previous = msg.payload.previous || []; // vorige gemeten waarden, default lege array\n\n// Nieuwe array voor gemeten waarden\nvar measured = commands.map(function(cmd, index) {\n    // Vind vorige werkelijke belasting van hetzelfde asset, als beschikbaar\n    var prevActual = previous[index] ? previous[index].actualLoad : cmd.scheduledLoad;\n\n    // Simuleer verandering (delta) met ±5% van vorige waarde\n    var delta = prevActual * (Math.random() * 0.1 - 0.05); // willekeurig tussen -5% en +5%\n    var actualLoad = Math.max(0, prevActual + delta); // voorkom negatieve belasting\n\n    // Retourneer het object inclusief delta\n    return {\n        asset: cmd.asset,\n        scheduledLoad: cmd.scheduledLoad,\n        actualLoad: actualLoad,\n        delta: delta,\n        status: cmd.status\n    };\n});\n\n// Bewaar de gemeten waarden als payload zodat de volgende run deze kan gebruiken\nmsg.payload = measured;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": [
            [
                "91aac3c7191f4e24"
            ]
        ]
    },
    {
        "id": "b73825c1f769e2e1",
        "type": "function",
        "z": "f1",
        "name": "verbeterd incrementing sim",
        "func": "// Controleer of er payload is, anders initialiseert met voorbeeldwaarden\nvar commands = msg.payload && msg.payload.length > 0 ? msg.payload : [\n    { asset: \"asset1\", scheduledLoad: 100, status: \"ok\" },\n    { asset: \"asset2\", scheduledLoad: 80, status: \"ok\" }\n];\n\n// Verkrijg vorige gemeten waarden uit flow context of initialiseer op scheduledLoad\nvar previous = flow.get(\"previousMeasured\") || commands.map(cmd => {\n    return { asset: cmd.asset, actualLoad: cmd.scheduledLoad };\n});\n\n// Simuleer nieuwe gemeten waarden met cumulatieve random toevoeging\nvar measured = commands.map(function(cmd, index) {\n    var prevActual = previous[index].actualLoad;\n\n    // Willekeurige extra belasting 0–10% van scheduledLoad\n    var increment = cmd.scheduledLoad * Math.random() * 0.1; \n\n    var actualLoad = prevActual + increment;\n\n    return {\n        asset: cmd.asset,\n        scheduledLoad: cmd.scheduledLoad,\n        actualLoad: actualLoad,\n        addedRandom: increment,\n        status: cmd.status\n    };\n});\n\n// Sla de nieuwe gemeten waarden op in flow context voor volgende run\nflow.set(\"previousMeasured\", measured);\n\n// Bereken totalScheduled en totalActual\nvar totalScheduled = 0;\nvar totalActual = 0;\n\nfor (var i = 0; i < measured.length; i++) {\n    totalScheduled += measured[i].scheduledLoad;\n    totalActual += measured[i].actualLoad;\n}\n\n// Stel payload samen\nmsg.payload = {\n    totalScheduled: totalScheduled,\n    totalActual: totalActual,\n    compliance: totalActual >= totalScheduled * 0.95,\n    details: measured\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 320,
        "wires": [
            [
                "91aac3c7191f4e24"
            ]
        ]
    },
    {
        "id": "8ed09575c0b8aa64",
        "type": "change",
        "z": "f1",
        "name": "get previous measured",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "previousMeasured",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 640,
        "wires": [
            [
                "48c7d915df71f6d7"
            ]
        ]
    },
    {
        "id": "48c7d915df71f6d7",
        "type": "debug",
        "z": "f1",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 640,
        "wires": []
    },
    {
        "id": "918334e8e2b29754",
        "type": "inject",
        "z": "f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "8ed09575c0b8aa64"
            ]
        ]
    },
    {
        "id": "7cbf7f68694c12df",
        "type": "comment",
        "z": "f1",
        "name": "werkt niet",
        "info": "",
        "x": 600,
        "y": 280,
        "wires": []
    },
    {
        "id": "66eedb35718b7229",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "set flow.contract01",
        "rules": [
            {
                "t": "set",
                "p": "contract01",
                "pt": "flow",
                "to": "{     \"consumptionPrice\": 0.30,     \"feedInPrice\": 0.25 }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5344d0fbfc7fa9dd",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "66eedb35718b7229"
            ]
        ]
    },
    {
        "id": "d506d1f16a1ebbdc",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "get flow.contract01",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "contract01",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "e88c631367d39b3b"
            ]
        ]
    },
    {
        "id": "5f3dfc2f7598a3eb",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "d506d1f16a1ebbdc"
            ]
        ]
    },
    {
        "id": "a1812894085d934b",
        "type": "comment",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "STAP 1 contract",
        "info": "",
        "x": 540,
        "y": 60,
        "wires": []
    },
    {
        "id": "417cf7b075023445",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 420,
        "y": 340,
        "wires": [
            [
                "45ad0f201b5c8060",
                "b1d855dc4a85e62b"
            ]
        ]
    },
    {
        "id": "8eac10cd78a8741b",
        "type": "ui-text",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "group": "3ff0523cefbe8bb6",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "Slimme meter: Afname kWh",
        "label": "SIMULATIE  Afname kWh",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#050505",
        "className": "",
        "x": 900,
        "y": 320,
        "wires": []
    },
    {
        "id": "a2a8010f25d612c8",
        "type": "ui-text",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "group": "3ff0523cefbe8bb6",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "Slimme Meter: Teruglevering kWh",
        "label": "SIMULATIE  Teruglevering kWh",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#0d0d0d",
        "className": "",
        "x": 920,
        "y": 360,
        "wires": []
    },
    {
        "id": "45ad0f201b5c8060",
        "type": "function",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "function 1",
        "func": "if (msg.reset === true) {\n    context.set('meterstand', 0);\n    msg.payload = 0;\n    return msg;\n}\n\n// Haal de vorige meterstand op uit context, of start op 0 kWh\nlet prevMeterstand = context.get('meterstand') || 0;\n\n// Genereer een random toename tussen 0.1 en 2 kWh\nlet toename = (Math.random() * (2 - 0.1) + 0.1);\n\n// Bereken de nieuwe meterstand\nlet nieuweMeterstand = prevMeterstand + toename;\n\n// Sla de nieuwe meterstand op in context\ncontext.set('meterstand', nieuweMeterstand);\n\n// Zet de payload naar de nieuwe meterstand, afgerond op 2 decimalen\nmsg.payload = Number(nieuweMeterstand.toFixed(2));\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "8eac10cd78a8741b",
                "e0c71da1b325ae09"
            ]
        ]
    },
    {
        "id": "b1b1c5e685b68cd8",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "reset = true",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 260,
        "wires": [
            [
                "45ad0f201b5c8060"
            ]
        ]
    },
    {
        "id": "00399cbad423a663",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "trigger 10 min",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "b1b1c5e685b68cd8",
                "1c84a6c4bb7612c7"
            ]
        ]
    },
    {
        "id": "2cf71c214416db76",
        "type": "ui-button",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "group": "3ff0523cefbe8bb6",
        "name": "reset afname",
        "label": "reset afname",
        "order": 3,
        "width": "6",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "b1b1c5e685b68cd8"
            ]
        ]
    },
    {
        "id": "b1d855dc4a85e62b",
        "type": "function",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "function 2",
        "func": "if (msg.reset === true) {\n    context.set('meterstand', 0);\n    msg.payload = 0;\n    return msg;\n}\n\n// Haal de vorige meterstand op uit context, of start op 0 kWh\nlet prevMeterstand = context.get('meterstand') || 0;\n\n// Genereer een random toename tussen 0.1 en 2 kWh\nlet toename = (Math.random() * (2 - 0.1) + 0.1);\n\n// Bereken de nieuwe meterstand\nlet nieuweMeterstand = prevMeterstand + toename;\n\n// Sla de nieuwe meterstand op in context\ncontext.set('meterstand', nieuweMeterstand);\n\n// Zet de payload naar de nieuwe meterstand, afgerond op 2 decimalen\nmsg.payload = Number(nieuweMeterstand.toFixed(2));\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 360,
        "wires": [
            [
                "a2a8010f25d612c8",
                "5b7f13fbae0af2a2"
            ]
        ]
    },
    {
        "id": "1c84a6c4bb7612c7",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "reset = true",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "b1d855dc4a85e62b"
            ]
        ]
    },
    {
        "id": "e2e6ab94aec41ac2",
        "type": "ui-button",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "group": "3ff0523cefbe8bb6",
        "name": "reset teruglevering",
        "label": "reset teruglevering",
        "order": 5,
        "width": "6",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "1c84a6c4bb7612c7"
            ]
        ]
    },
    {
        "id": "e0c71da1b325ae09",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "set flow.consumption",
        "rules": [
            {
                "t": "set",
                "p": "consumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5b7f13fbae0af2a2",
        "type": "change",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "set flow.feedin",
        "rules": [
            {
                "t": "set",
                "p": "feedin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7b7674c29974b3d0",
        "type": "comment",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "name": "STAP 2 - METEN",
        "info": "",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "5533ef5078332c0a",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 450,
        "y": 560,
        "wires": [
            [
                "21ac50fa2c9f5c3d"
            ]
        ]
    },
    {
        "id": "098484508901e226",
        "type": "debug",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "4d5c5a8e44c2b127",
        "type": "comment",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "STAP 3 - SCHADUWFACTUUR",
        "info": "",
        "x": 210,
        "y": 560,
        "wires": []
    },
    {
        "id": "52f19f450ec5c693",
        "type": "inject",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "4999cb0b1b46569c"
            ]
        ]
    },
    {
        "id": "9cd69821d00e23b4",
        "type": "function",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 700,
        "wires": [
            [
                "507bde26a254ee58",
                "3474b89d5259f1bb"
            ]
        ]
    },
    {
        "id": "4999cb0b1b46569c",
        "type": "function",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "function 3",
        "func": "// Haal contract uit flow context, of fallback naar default prijzen\nlet contract = flow.get(\"contract\") || {\n    consumptionPrice: 0.30,\n    feedInPrice: 0.25\n};\n\n// Haal bestaande factuur op of initialiseer\nlet invoice = flow.get(\"invoice\") || {\n    startConsumptionMeter: null,\n    startFeedInMeter: null,\n    lastConsumptionMeter: null,\n    lastFeedInMeter: null,\n    totalConsumption_kWh: 0,\n    totalFeedIn_kWh: 0,\n    totalCost_eur: 0,\n    totalRevenue_eur: 0,\n    netBalance_eur: 0,\n    measurements: []\n};\n\n// Lees absolute meterstanden uit flow variabelen\nlet currentConsumptionMeter = flow.get(\"consumption\");\nlet currentFeedInMeter = flow.get(\"feedin\");\n\nif (currentConsumptionMeter === undefined || currentFeedInMeter === undefined) {\n    node.warn(\"Flow variabelen 'consumption' en/of 'feedin' zijn niet gezet!\");\n    return null;\n}\n\n// Eerste keer: beginmeterstanden vastleggen\nif (invoice.startConsumptionMeter === null || invoice.startFeedInMeter === null) {\n    invoice.startConsumptionMeter = currentConsumptionMeter;\n    invoice.startFeedInMeter = currentFeedInMeter;\n    invoice.lastConsumptionMeter = currentConsumptionMeter;\n    invoice.lastFeedInMeter = currentFeedInMeter;\n\n    invoice.measurements.push({\n        timestamp: new Date().toISOString(),\n        consumption_kWh: 0,\n        feedIn_kWh: 0,\n        note: \"Eerste meterstand vastgelegd\"\n    });\n\n} else {\n    // Bereken delta t.o.v. vorige meting\n    let consumptionDelta = currentConsumptionMeter - invoice.lastConsumptionMeter;\n    let feedInDelta = currentFeedInMeter - invoice.lastFeedInMeter;\n\n    if (consumptionDelta < 0) consumptionDelta = 0;\n    if (feedInDelta < 0) feedInDelta = 0;\n\n    // **Totalen worden niet meer opgeteld, maar opnieuw berekend vanaf startwaarden**\n    invoice.totalConsumption_kWh = currentConsumptionMeter - invoice.startConsumptionMeter;\n    invoice.totalFeedIn_kWh = currentFeedInMeter - invoice.startFeedInMeter;\n\n    invoice.totalCost_eur = parseFloat((invoice.totalConsumption_kWh * contract.consumptionPrice).toFixed(2));\n    invoice.totalRevenue_eur = parseFloat((invoice.totalFeedIn_kWh * contract.feedInPrice).toFixed(2));\n    invoice.netBalance_eur = parseFloat((invoice.totalRevenue_eur - invoice.totalCost_eur).toFixed(2));\n\n    invoice.measurements.push({\n        timestamp: new Date().toISOString(),\n        consumption_kWh: consumptionDelta,\n        feedIn_kWh: feedInDelta\n    });\n\n    invoice.lastConsumptionMeter = currentConsumptionMeter;\n    invoice.lastFeedInMeter = currentFeedInMeter;\n}\n\n// Sla invoice terug in flow context\nflow.set(\"invoice\", invoice);\n\n// Output 1: volledige factuur met meetgegevens\nlet fullInvoice = {\n    payload: invoice\n};\n\n// Output 2: vereenvoudigde factuur zonder meetgegevens\nlet simpleInvoice = {\n    payload: {\n        lastConsumptionMeter: invoice.lastConsumptionMeter,\n        lastFeedInMeter: invoice.lastFeedInMeter,\n        totalConsumption_kWh: invoice.totalConsumption_kWh,\n        totalFeedIn_kWh: invoice.totalFeedIn_kWh,\n        totalCost_eur: invoice.totalCost_eur,\n        totalRevenue_eur: invoice.totalRevenue_eur,\n        netBalance_eur: invoice.netBalance_eur\n    }\n};\n\nreturn [fullInvoice, simpleInvoice];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 680,
        "wires": [
            [],
            [
                "9cd69821d00e23b4",
                "9b7c18fed7225491",
                "1552ba8374a502c0"
            ]
        ]
    },
    {
        "id": "9b7c18fed7225491",
        "type": "debug",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 640,
        "wires": []
    },
    {
        "id": "1552ba8374a502c0",
        "type": "mqtt out",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "CloudAMQP",
        "topic": "vpp/d2c1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74e0977c546da2fd",
        "x": 510,
        "y": 780,
        "wires": []
    },
    {
        "id": "b27da7430b6cba9d",
        "type": "mqtt in",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "CloudAMQP",
        "topic": "vpp/d2c1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "eb49128cfb449a6e"
            ]
        ]
    },
    {
        "id": "eb49128cfb449a6e",
        "type": "debug",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 780,
        "wires": []
    },
    {
        "id": "998b8e6e541f0f45",
        "type": "ui-text",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "group": "f6ef2709e1551c1b",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "comitment",
        "label": "contract:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "e88c631367d39b3b",
        "type": "json",
        "z": "a7de3d2590a25b91",
        "g": "2e34aff27c33e83f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "998b8e6e541f0f45"
            ]
        ]
    },
    {
        "id": "507bde26a254ee58",
        "type": "ui-table",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "group": "9f894ccd6955bf05",
        "name": "table",
        "label": "10 min update",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "7",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 790,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "21ac50fa2c9f5c3d",
        "type": "function",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "create first invoice",
        "func": "// Initialiseer een nieuwe factuur in de flow context\nlet invoice = {\n    startConsumptionMeter: null,   // wordt later ingevuld bij eerste meting\n    startFeedInMeter: null,\n    lastConsumptionMeter: null,\n    lastFeedInMeter: null,\n    totalConsumption_kWh: 0,\n    totalFeedIn_kWh: 0,\n    totalCost_eur: 0,\n    totalRevenue_eur: 0,\n    netBalance_eur: 0,\n    measurements: []\n};\n\n// Zet deze factuur in de flow context\nflow.set(\"invoice\", invoice);\n\nnode.warn(\"First invoice initialized.\");\n\nreturn null;  // geen output nodig\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "098484508901e226"
            ]
        ]
    },
    {
        "id": "3474b89d5259f1bb",
        "type": "debug",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 660,
        "wires": []
    },
    {
        "id": "eb11bec4a55808d6",
        "type": "ui-button",
        "z": "a7de3d2590a25b91",
        "g": "00c6a3c12ddd7db5",
        "group": "9f894ccd6955bf05",
        "name": "reset factuur",
        "label": "reset factuur",
        "order": 2,
        "width": "6",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 290,
        "y": 620,
        "wires": [
            [
                "21ac50fa2c9f5c3d"
            ]
        ]
    },
    {
        "id": "19cf82d0962e9d59",
        "type": "ui-template",
        "z": "a7de3d2590a25b91",
        "g": "9b365b47a4e25843",
        "group": "3ff0523cefbe8bb6",
        "page": "",
        "ui": "",
        "name": "foto slimme meter",
        "order": 1,
        "width": "6",
        "height": "6",
        "head": "",
        "format": "<div style=\"text-align:right;\">\n  <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%2Fid%2FOIP.kq_-_5HkGiQ70Euh6GCuTwHaFV%3Fr%3D0%26pid%3DApi&f=1&ipt=a036b397495ab804cbc41d07cd445ca2a79f3a55a0dafac9f012728ab4d5e05a&ipo=images\" \n       alt=\"Node-RED Logo\" \n       style=\"max-width:100%; height:auto; border-radius:12px;\">\n</div>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f32c8c9ce019b5a7",
        "type": "inject",
        "z": "5b4e85dc2a347e67",
        "name": "Elke 5 min",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "3734fd05c93076c4",
                "0ea72fdfbb50d946"
            ]
        ]
    },
    {
        "id": "3734fd05c93076c4",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "Simuleer zon & PV",
        "func": "// Simuleer zonlicht (0-100)\nlet sunlight = Math.floor(Math.random() * 101);\n// Bereken originele PV productie (max 5000 W)\nlet pv_original = Math.round(sunlight / 100 * 5000);\n\nmsg.payload = {\n    sunlight: sunlight,\n    pv_original: pv_original\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "304c73e8feff6e7f",
                "f76aae9222a1e5ba",
                "1534e41e9a8ae1c9"
            ]
        ]
    },
    {
        "id": "304c73e8feff6e7f",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "Smart contract regels",
        "func": "// Haal waarden op\nlet sunlight = msg.payload.sunlight;\nlet pv_original = msg.payload.pv_original;\n\n// Contractregels: hoe meer zon, hoe meer curtailing\nlet curtailment = 0;\nif (sunlight >= 30 && sunlight < 60) curtailment = 20;\nif (sunlight >= 60) curtailment = 40;\n\n// Bereken curtailed vermogen\nlet pv_curtailed = Math.round(pv_original * (1 - curtailment / 100));\n\n// Stel resultaat samen\nmsg.payload.curtailment = curtailment;\nmsg.payload.pv_curtailed = pv_curtailed;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "8221daf60fcb8246",
                "7530c64ab4617ed6",
                "114b2cced4fd08d2"
            ]
        ]
    },
    {
        "id": "8221daf60fcb8246",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "Controle + blockchain",
        "func": "// Bepaal bonus/malus\nlet bonus_malus = \"bonus\"; // voor demo altijd bonus\n\n// Blockchain array ophalen\nlet chain = flow.get(\"blockchain\") || [];\n\n// Maak blok\nlet prev_hash = chain.length > 0 ? chain[chain.length - 1].hash : \"GENESIS\";\nlet block = {\n    timestamp: new Date().toISOString(),\n    sunlight: msg.payload.sunlight,\n    pv_original: msg.payload.pv_original,\n    curtailment: msg.payload.curtailment,\n    pv_curtailed: msg.payload.pv_curtailed,\n    bonus_malus: bonus_malus,\n    prev_hash: prev_hash\n};\n\n// Eenvoudige hash (stringify + btoa voor demo)\nblock.hash = Buffer.from(JSON.stringify(block)).toString(\"base64\").slice(0,20);\n\n// Voeg toe aan chain\nchain.push(block);\nflow.set(\"blockchain\", chain);\n\n// Zet output\nmsg.payload.block = block;\nmsg.payload.blockchain_length = chain.length;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "3142b718429567d6",
                "9faf4f3fed045a16"
            ]
        ]
    },
    {
        "id": "3142b718429567d6",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "Toon blockchain",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 400,
        "wires": []
    },
    {
        "id": "f76aae9222a1e5ba",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 200,
        "wires": []
    },
    {
        "id": "7530c64ab4617ed6",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "e90ba978a64f6a02",
        "type": "change",
        "z": "5b4e85dc2a347e67",
        "name": "get blockchain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blockchain",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "ecc7030817e6e693"
            ]
        ]
    },
    {
        "id": "d9c5cab43ff5dd8a",
        "type": "inject",
        "z": "5b4e85dc2a347e67",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "e90ba978a64f6a02"
            ]
        ]
    },
    {
        "id": "ecc7030817e6e693",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 540,
        "wires": []
    },
    {
        "id": "0b5e9df8224f5949",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "d": true,
        "name": "maak factuur",
        "func": "// Haal de blockchain op\nlet chain = flow.get(\"blockchain\") || [];\n\n// Tellers\nlet bonusCount = 0;\nlet malusCount = 0;\n\n// Doorloop alle blokken\nchain.forEach(block => {\n    if (block.bonus_malus === \"bonus\") bonusCount++;\n    if (block.bonus_malus === \"malus\") malusCount++;\n});\n\n// Settlement-regels\nlet bonusValue = 0.10;   // €0,10 per bonus\nlet malusValue = -0.10;  // –€0,10 per malus\n\nlet totalAmount = (bonusCount * bonusValue) + (malusCount * malusValue);\n\n// Maak factuur\nlet invoice = {\n    prosumer: \"Prosumer_1\",\n    period_start: chain.length > 0 ? chain[0].timestamp : null,\n    period_end: chain.length > 0 ? chain[chain.length - 1].timestamp : null,\n    total_blocks: chain.length,\n    bonus_count: bonusCount,\n    malus_count: malusCount,\n    bonus_value: bonusValue,\n    malus_value: malusValue,\n    settlement_score: bonusCount - malusCount,\n    total_amount: totalAmount.toFixed(2) + \" EUR\"\n};\n\n// Output naar msg.payload\nmsg.payload = invoice;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 700,
        "wires": [
            [
                "49926a9e7a0f8177",
                "f97a60dc4620aa75"
            ],
            []
        ]
    },
    {
        "id": "68bd5cdd02ccbfe7",
        "type": "inject",
        "z": "5b4e85dc2a347e67",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "0b5e9df8224f5949",
                "3fbcf1672eb48449"
            ]
        ]
    },
    {
        "id": "49926a9e7a0f8177",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "f97a60dc4620aa75",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 640,
        "wires": [
            [
                "8b566d870dedc9e0",
                "141d2cb28164358e"
            ]
        ]
    },
    {
        "id": "8b566d870dedc9e0",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 600,
        "wires": []
    },
    {
        "id": "141d2cb28164358e",
        "type": "ui-table",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "factuur curtailment",
        "label": "1 x per 10 min update",
        "order": 6,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1110,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1534e41e9a8ae1c9",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "c90f2ef72aad5d05",
                "58ac42a515687a9d"
            ]
        ]
    },
    {
        "id": "c90f2ef72aad5d05",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 200,
        "wires": []
    },
    {
        "id": "58ac42a515687a9d",
        "type": "ui-table",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "SIM zon en PV",
        "label": "table",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1100,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "114b2cced4fd08d2",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 340,
        "wires": [
            [
                "0cc596cce3d925f0",
                "ed65797296113e5d"
            ]
        ]
    },
    {
        "id": "0cc596cce3d925f0",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 300,
        "wires": []
    },
    {
        "id": "ed65797296113e5d",
        "type": "ui-table",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "Enkel Block",
        "label": "table",
        "order": 4,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1090,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9faf4f3fed045a16",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            [
                "8c91f2bb7e521818",
                "09d0836e358ed9c6"
            ]
        ]
    },
    {
        "id": "8c91f2bb7e521818",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "09d0836e358ed9c6",
        "type": "ui-table",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "controle en block",
        "label": "table",
        "order": 5,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1110,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb8709db381df11",
        "type": "ui-button",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "trigger",
        "label": "button",
        "order": 1,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3734fd05c93076c4",
                "0ea72fdfbb50d946"
            ]
        ]
    },
    {
        "id": "0ea72fdfbb50d946",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "extract rules",
        "func": "// Statische contractregels zoals gedefinieerd in de Smart Contract node\nlet contractRules = {\n    max_pv: 5000,\n    curtailing_rules: [\n        {sunlight_range: \"<30\", curtailment: \"0%\"},\n        {sunlight_range: \"30-60\", curtailment: \"20%\"},\n        {sunlight_range: \">60\", curtailment: \"40%\"}\n    ],\n    bonus_malus: {\n        bonus: \"correcte curtailing +1 punt\",\n        malus: \"afwijkende curtailing -1 punt\"\n    },\n    description: \"Deze regels worden gebruikt door de Smart Contract node voor PV curtailment en bonus/malus.\"\n};\n\n// Output naar debug/dashboard\nmsg.payload = contractRules;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "8e7120708101a634",
                "d2ea1bc35e5f82a7"
            ],
            []
        ]
    },
    {
        "id": "8e7120708101a634",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": [
            [
                "06853b905c91f8b8"
            ]
        ]
    },
    {
        "id": "06853b905c91f8b8",
        "type": "ui-table",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "rules of contract",
        "label": "table",
        "order": 3,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 1100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d2ea1bc35e5f82a7",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 80,
        "wires": []
    },
    {
        "id": "83176f7373219c8a",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "reset blockchain",
        "func": "// Reset de blockchain in flow context\nflow.set(\"blockchain\", []);\n\n// Optioneel: debug-output\nmsg.payload = {\n    message: \"Blockchain is gereset. Schone start voor simulatie.\",\n    blockchain_length: 0\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 780,
        "wires": [
            [
                "c573e5f94c1484e3"
            ]
        ]
    },
    {
        "id": "e6204833739cf424",
        "type": "inject",
        "z": "5b4e85dc2a347e67",
        "name": "reset ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "83176f7373219c8a"
            ]
        ]
    },
    {
        "id": "c573e5f94c1484e3",
        "type": "debug",
        "z": "5b4e85dc2a347e67",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 780,
        "wires": []
    },
    {
        "id": "842a94036bdc3ff7",
        "type": "ui-button",
        "z": "5b4e85dc2a347e67",
        "group": "3be6a00ca0a134a4",
        "name": "reset blockchain",
        "label": "reset blockchain",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 160,
        "y": 780,
        "wires": [
            [
                "83176f7373219c8a"
            ]
        ]
    },
    {
        "id": "3fbcf1672eb48449",
        "type": "function",
        "z": "5b4e85dc2a347e67",
        "name": "maak factuur zonder null blocks",
        "func": "// Haal de blockchain op\nlet chain = flow.get(\"blockchain\") || [];\n\n// Filter alleen blocks met data (bonus of malus)\nlet filledBlocks = chain.filter(block => block.bonus_malus === \"bonus\" || block.bonus_malus === \"malus\");\n\n// Tellers\nlet bonusCount = 0;\nlet malusCount = 0;\n\n// Doorloop alle gefilterde blokken\nfilledBlocks.forEach(block => {\n    if (block.bonus_malus === \"bonus\") bonusCount++;\n    if (block.bonus_malus === \"malus\") malusCount++;\n});\n\n// Settlement-regels\nlet bonusValue = 0.10;   // €0,10 per bonus\nlet malusValue = -0.10;  // –€0,10 per malus\n\nlet totalAmount = (bonusCount * bonusValue) + (malusCount * malusValue);\n\n// Maak factuur\nlet invoice = {\n    prosumer: \"Prosumer_1\",\n    period_start: filledBlocks.length > 0 ? filledBlocks[0].timestamp : null,\n    period_end: filledBlocks.length > 0 ? filledBlocks[filledBlocks.length - 1].timestamp : null,\n    total_blocks: filledBlocks.length, // Alleen blocks met data\n    bonus_count: bonusCount,\n    malus_count: malusCount,\n    bonus_value: bonusValue,\n    malus_value: malusValue,\n    settlement_score: bonusCount - malusCount,\n    total_amount: totalAmount.toFixed(2) + \" EUR\"\n};\n\n// Output naar msg.payload\nmsg.payload = invoice;\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "f97a60dc4620aa75",
                "992c3528e7de8efc"
            ],
            []
        ]
    },
    {
        "id": "992c3528e7de8efc",
        "type": "mqtt out",
        "z": "5b4e85dc2a347e67",
        "name": "CloudAMQP",
        "topic": "vpp/d2c4",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74e0977c546da2fd",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "92fc9e255802956b",
        "type": "mqtt in",
        "z": "909ecd68cb0a370f",
        "name": "CloudAMQP",
        "topic": "vpp/d1c1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "9ae3cc925212e770"
            ]
        ]
    },
    {
        "id": "0d953b32d4171539",
        "type": "comment",
        "z": "909ecd68cb0a370f",
        "name": "fulfilment van DER 1 CTR 1",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "978fe75f9d61caa5",
        "type": "mqtt in",
        "z": "909ecd68cb0a370f",
        "name": "CloudAMQP",
        "topic": "vpp/d2c1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 220,
        "wires": [
            [
                "95d188967b1904a5"
            ]
        ]
    },
    {
        "id": "e726a0ad1920d12d",
        "type": "comment",
        "z": "909ecd68cb0a370f",
        "name": "fulfilment van DER 2 CTR 1",
        "info": "",
        "x": 160,
        "y": 180,
        "wires": []
    },
    {
        "id": "9ae3cc925212e770",
        "type": "change",
        "z": "909ecd68cb0a370f",
        "name": "set flow d1c1",
        "rules": [
            {
                "t": "set",
                "p": "d1c1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "95d188967b1904a5",
        "type": "change",
        "z": "909ecd68cb0a370f",
        "name": "set flow d2c1",
        "rules": [
            {
                "t": "set",
                "p": "d2c1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b5bd8a2b95c15e5f",
        "type": "change",
        "z": "909ecd68cb0a370f",
        "name": "get d1c1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "d1c1",
                "tot": "flow",
                "dc": true
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bron1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 360,
        "wires": [
            [
                "eda5b38201ddb829",
                "287686ea3e255f5a",
                "e7c365790102461b",
                "07b9ac6ed4fccd12"
            ]
        ]
    },
    {
        "id": "1f05695cd70d0f0f",
        "type": "change",
        "z": "909ecd68cb0a370f",
        "name": "get d2c1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "d2c1",
                "tot": "flow",
                "dc": true
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bron2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 440,
        "wires": [
            [
                "2d1083644b6282ad",
                "287686ea3e255f5a",
                "99aab9eea1650376",
                "07b9ac6ed4fccd12"
            ]
        ]
    },
    {
        "id": "7c348020f37288a8",
        "type": "inject",
        "z": "909ecd68cb0a370f",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "b5bd8a2b95c15e5f",
                "1f05695cd70d0f0f"
            ]
        ]
    },
    {
        "id": "eda5b38201ddb829",
        "type": "debug",
        "z": "909ecd68cb0a370f",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 320,
        "wires": []
    },
    {
        "id": "2d1083644b6282ad",
        "type": "debug",
        "z": "909ecd68cb0a370f",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "287686ea3e255f5a",
        "type": "join",
        "z": "909ecd68cb0a370f",
        "name": "Join Payloads",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 540,
        "y": 500,
        "wires": [
            [
                "8da10c425d26251d"
            ]
        ]
    },
    {
        "id": "8da10c425d26251d",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "name": "Tel JSON waarden op",
        "func": "let bron1 = msg.payload.bron1;\nlet bron2 = msg.payload.bron2;\n\nlet resultaat = {};\n\nfor (let key in bron1) {\n    if (bron2.hasOwnProperty(key)) {\n        resultaat[key] = bron1[key] + bron2[key];\n    }\n}\n\nmsg.payload = resultaat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "77b95e194ae918ce"
            ]
        ]
    },
    {
        "id": "e7c365790102461b",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "1d69eadc630d214b"
            ]
        ]
    },
    {
        "id": "99aab9eea1650376",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 440,
        "wires": [
            [
                "55ce7bd851c3c99f"
            ]
        ]
    },
    {
        "id": "77b95e194ae918ce",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 620,
        "wires": [
            [
                "012d66c1976aa95c",
                "cc9947f75ee2a403"
            ]
        ]
    },
    {
        "id": "012d66c1976aa95c",
        "type": "ui-table",
        "z": "909ecd68cb0a370f",
        "group": "b89ae50a82362da4",
        "name": "table",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "7",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 770,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cc9947f75ee2a403",
        "type": "debug",
        "z": "909ecd68cb0a370f",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 660,
        "wires": []
    },
    {
        "id": "1d69eadc630d214b",
        "type": "ui-table",
        "z": "909ecd68cb0a370f",
        "group": "3b53b4b0b1169109",
        "name": "table",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "7",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "55ce7bd851c3c99f",
        "type": "ui-table",
        "z": "909ecd68cb0a370f",
        "group": "fcdcf18a4a74ad50",
        "name": "table",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "7",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "91278785cee4e46b",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "name": "tabel intern extern",
        "func": "// Deze functie verwacht een array met 2 payloads in msg.payload\n// msg.payload = [payloadDeelnemer1, payloadDeelnemer2]\n\nlet d1 = msg.payload[0];\nlet d2 = msg.payload[1];\n\n// totaal productie en consumptie berekenen\nlet totaal_consumptie = d1.totalConsumption_kWh + d2.totalConsumption_kWh;\nlet totaal_productie  = d1.totalFeedIn_kWh     + d2.totalFeedIn_kWh;\n\n// interne / externe berekenen\nlet interne = Math.min(totaal_consumptie, totaal_productie);\nlet externe_levering = Math.max(0, totaal_productie - totaal_consumptie);\nlet externe_afname   = Math.max(0, totaal_consumptie - totaal_productie);\n\n// tabel bouwen\nlet tabel = [\n    {\n        deelnemer: \"Deelnemer 1\",\n        consumptie: d1.totalConsumption_kWh,\n        productie: d1.totalFeedIn_kWh\n    },\n    {\n        deelnemer: \"Deelnemer 2\",\n        consumptie: d2.totalConsumption_kWh,\n        productie: d2.totalFeedIn_kWh\n    },\n    {\n        deelnemer: \"Totaal\",\n        consumptie: totaal_consumptie,\n        productie: totaal_productie,\n        interneLevering: interne,\n        externeLevering: externe_levering,\n        externeAfname: externe_afname\n    }\n];\n\nmsg.payload = tabel;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "949ed83332172e11",
                "06fbb020733144b7"
            ]
        ]
    },
    {
        "id": "949ed83332172e11",
        "type": "debug",
        "z": "909ecd68cb0a370f",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 800,
        "wires": []
    },
    {
        "id": "07b9ac6ed4fccd12",
        "type": "join",
        "z": "909ecd68cb0a370f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 250,
        "y": 800,
        "wires": [
            [
                "91278785cee4e46b"
            ]
        ]
    },
    {
        "id": "06fbb020733144b7",
        "type": "ui-table",
        "z": "909ecd68cb0a370f",
        "group": "17ae8cdbdbe87d17",
        "name": "tabel intern extern",
        "label": "peer2peer",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 830,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a1a26a967f1c6265",
        "type": "function",
        "z": "909ecd68cb0a370f",
        "d": true,
        "name": "interne saldering",
        "func": "// Deze functie verwacht twee payloads in msg.payload (array van 2)\n// of buffert zoals in mijn vorige voorbeeld\n\nlet d1 = msg.payload[0];\nlet d2 = msg.payload[1];\n\nlet P1 = d1.totalFeedIn_kWh;\nlet C1 = d1.totalConsumption_kWh;\nlet P2 = d2.totalFeedIn_kWh;\nlet C2 = d2.totalConsumption_kWh;\n\nlet P = P1 + P2;\nlet C = C1 + C2;\n\n// interne levering/afname totaal\nlet interne = Math.min(P, C);\n\n// interne toedeling naar deelnemers\nlet d1_interne_levering = P > 0 ? (P1 / P) * interne : 0;\nlet d2_interne_levering = P > 0 ? (P2 / P) * interne : 0;\n\nlet d1_interne_afname = C > 0 ? (C1 / C) * interne : 0;\nlet d2_interne_afname = C > 0 ? (C2 / C) * interne : 0;\n\n// extern\nlet d1_extern_levering = P1 - d1_interne_levering;\nlet d2_extern_levering = P2 - d2_interne_levering;\n\nlet d1_extern_afname = C1 - d1_interne_afname;\nlet d2_extern_afname = C2 - d2_interne_afname;\n\n// saldering (externe deel)\nlet d1_saldo = d1_extern_levering - d1_extern_afname;\nlet d2_saldo = d2_extern_levering - d2_extern_afname;\n\n// totaal\nlet externe_levering = d1_extern_levering + d2_extern_levering;\nlet externe_afname   = d1_extern_afname + d2_extern_afname;\n\n// tabel\nlet tabel = [\n    {\n        deelnemer: \"Deelnemer 1\",\n        consumptie: C1,\n        productie: P1,\n        interneLevering: d1_interne_levering,\n        interneAfname: d1_interne_afname,\n        externeLevering: d1_extern_levering,\n        externeAfname: d1_extern_afname,\n        saldo: d1_saldo\n    },\n    {\n        deelnemer: \"Deelnemer 2\",\n        consumptie: C2,\n        productie: P2,\n        interneLevering: d2_interne_levering,\n        interneAfname: d2_interne_afname,\n        externeLevering: d2_extern_levering,\n        externeAfname: d2_extern_afname,\n        saldo: d2_saldo\n    },\n    {\n        deelnemer: \"Totaal\",\n        consumptie: C,\n        productie: P,\n        interneLevering: interne,\n        interneAfname: interne,\n        externeLevering: externe_levering,\n        externeAfname: externe_afname,\n        saldo: d1_saldo + d2_sal\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 2,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 960,
        "wires": [
            [
                "98d235cec0440aa4",
                "cff38ddf1461d84b"
            ]
        ]
    },
    {
        "id": "cff38ddf1461d84b",
        "type": "debug",
        "z": "909ecd68cb0a370f",
        "d": true,
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "98d235cec0440aa4",
        "type": "ui-table",
        "z": "909ecd68cb0a370f",
        "d": true,
        "group": "b89ae50a82362da4",
        "name": "interne saldering",
        "label": "interne saldering",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 830,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "c2dd2ebebfdcd0cd",
        "type": "mqtt in",
        "z": "4394cc19da3ce8b8",
        "name": "CloudAMQP",
        "topic": "vpp/d1c4",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "18877ad2892df594",
                "6bdd920b317255f9"
            ]
        ]
    },
    {
        "id": "072d47a9cc158faa",
        "type": "comment",
        "z": "4394cc19da3ce8b8",
        "name": "fulfilment van DER 1 CTR 1",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "ebe317950d85be25",
        "type": "mqtt in",
        "z": "4394cc19da3ce8b8",
        "name": "CloudAMQP",
        "topic": "vpp/d2c4",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "74e0977c546da2fd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "752f9e4564f77572",
                "ada48b7959ebf885"
            ]
        ]
    },
    {
        "id": "73766c892aced374",
        "type": "comment",
        "z": "4394cc19da3ce8b8",
        "name": "fulfilment van DER 2 CTR 1",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "18877ad2892df594",
        "type": "change",
        "z": "4394cc19da3ce8b8",
        "name": "set flow d1c4",
        "rules": [
            {
                "t": "set",
                "p": "d1c4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "752f9e4564f77572",
        "type": "change",
        "z": "4394cc19da3ce8b8",
        "name": "set flow d2c4",
        "rules": [
            {
                "t": "set",
                "p": "d2c4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "eabbfef1ba3c3e7a",
        "type": "change",
        "z": "4394cc19da3ce8b8",
        "name": "get d1c4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "d1c4",
                "tot": "flow",
                "dc": true
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bron1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 380,
        "wires": [
            [
                "225ecb6d798e32d7",
                "4ae658cac07d1fed",
                "a60e6354d82da963"
            ]
        ]
    },
    {
        "id": "4e5a2e08bd6116ef",
        "type": "change",
        "z": "4394cc19da3ce8b8",
        "name": "get d2c1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "d2c4",
                "tot": "flow",
                "dc": true
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bron2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 460,
        "wires": [
            [
                "67c27d9fc645f1e5",
                "4ae658cac07d1fed",
                "1b78386878df3645"
            ]
        ]
    },
    {
        "id": "27c3c426c861b16e",
        "type": "inject",
        "z": "4394cc19da3ce8b8",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "eabbfef1ba3c3e7a",
                "4e5a2e08bd6116ef"
            ]
        ]
    },
    {
        "id": "225ecb6d798e32d7",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 340,
        "wires": []
    },
    {
        "id": "67c27d9fc645f1e5",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 420,
        "wires": []
    },
    {
        "id": "4ae658cac07d1fed",
        "type": "join",
        "z": "4394cc19da3ce8b8",
        "name": "Join Payloads",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 520,
        "wires": [
            [
                "3a8a91d10e4314f1"
            ]
        ]
    },
    {
        "id": "3a8a91d10e4314f1",
        "type": "function",
        "z": "4394cc19da3ce8b8",
        "name": "Tel JSON waarden op",
        "func": "let bron1 = msg.payload.bron1;\nlet bron2 = msg.payload.bron2;\n\nlet resultaat = {};\n\nfor (let key in bron1) {\n    if (bron2.hasOwnProperty(key)) {\n        resultaat[key] = bron1[key] + bron2[key];\n    }\n}\n\nmsg.payload = resultaat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 580,
        "wires": [
            [
                "8e76d951381d1efc"
            ]
        ]
    },
    {
        "id": "a60e6354d82da963",
        "type": "function",
        "z": "4394cc19da3ce8b8",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "a4deea0b1fe2ac77",
                "22d5f67eda42e2a2"
            ]
        ]
    },
    {
        "id": "1b78386878df3645",
        "type": "function",
        "z": "4394cc19da3ce8b8",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 460,
        "wires": [
            [
                "932c50bc80e45a76"
            ]
        ]
    },
    {
        "id": "8e76d951381d1efc",
        "type": "function",
        "z": "4394cc19da3ce8b8",
        "name": "function make table",
        "func": "let obj = msg.payload;\nlet rows = [];\n\nfor (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n        rows.push({ key: key, value: obj[key] });\n    }\n}\n\nmsg.payload = rows;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 640,
        "wires": [
            [
                "5651e8caca80902e",
                "0722bea0fb964b01"
            ]
        ]
    },
    {
        "id": "5651e8caca80902e",
        "type": "ui-table",
        "z": "4394cc19da3ce8b8",
        "group": "0608458daecfcdc0",
        "name": "table-aggregaat",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 840,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "0722bea0fb964b01",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 680,
        "wires": []
    },
    {
        "id": "a4deea0b1fe2ac77",
        "type": "ui-table",
        "z": "4394cc19da3ce8b8",
        "group": "053470e410d940ea",
        "name": "table-deelnemer 1",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 850,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "932c50bc80e45a76",
        "type": "ui-table",
        "z": "4394cc19da3ce8b8",
        "group": "352d02ac50ec210a",
        "name": "table=deelnamer 2",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 850,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6bdd920b317255f9",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 60,
        "wires": []
    },
    {
        "id": "ada48b7959ebf885",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "22d5f67eda42e2a2",
        "type": "debug",
        "z": "4394cc19da3ce8b8",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "433e5b9171b8137f",
        "type": "global-config",
        "env": [],
        "modules": {
            "@flowfuse/node-red-dashboard": "1.27.2",
            "@flowfuse/nr-file-nodes": "0.0.8"
        }
    }
]